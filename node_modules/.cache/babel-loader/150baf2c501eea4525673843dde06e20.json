{"ast":null,"code":"var _jsxFileName = \"/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/pages/authentication/register.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { Row, Card, CardTitle, FormGroup, Label, Col, Button } from 'reactstrap';\nimport { NavLink, useParams } from 'react-router-dom'; // import \"../../authorization.scss\"\n\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../redux/actions';\nimport IntlMessages from '../../helpers/IntlMessages';\n/* import { Colxx } from '../../components/common/CustomBootstrap'; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  history,\n  registerUserAction\n}) => {\n  const validatePassword = value => {\n    let error;\n\n    if (!value) {\n      error = 'Please enter your password';\n    } else if (value.length < 4) {\n      error = 'Value must be longer than 3 characters';\n    }\n\n    return error;\n  };\n\n  const validateEmail = value => {\n    let error;\n\n    if (!value) {\n      error = 'Please enter your email address';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = 'Invalid email address';\n    }\n\n    return error;\n  };\n\n  const username = value => {\n    let error;\n\n    if (!value) {\n      error = 'Please enter your username';\n    } else if (value.length < 2) {\n      error = 'Value must be longer than 2 characters';\n    }\n\n    return error;\n  };\n\n  const onUserRegister = values => {\n    if (values.password === values.confirm_password) {\n      registerUserAction(values, history);\n    }\n  };\n\n  const {\n    role\n  } = useParams;\n  console.log(\"role\", role);\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    role: null\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"h-100\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xxs: \"12\",\n      md: \"10\",\n      className: \"mx-auto my-auto\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-relative image-side \",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white h2\",\n            children: \"MAGIC IS IN THE DETAILS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"white mb-0\",\n            children: [\"Please use this form to register. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 63\n            }, this), \"If you are a member, please\", ' ', /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/user/login\",\n              className: \"white\",\n              children: \"login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-side\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            className: \"white\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-single\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"mb-5\",\n            children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n              id: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            onSubmit: onUserRegister,\n            children: ({\n              errors,\n              touched,\n              handleChange,\n              values\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              className: \"av-tooltip tooltip-label-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"form-group has-float-label\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"name\",\n                  name: \"name\",\n                  value: values.name,\n                  validate: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback d-block\",\n                  children: errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"form-group has-float-label\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"email\",\n                  name: \"email\",\n                  value: values.email,\n                  validate: validateEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 41\n                }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback d-block\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"form-group has-float-label\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"password\",\n                  name: \"password\",\n                  value: values.password,\n                  validate: validatePassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback d-block\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"form-group has-float-label\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"confirm password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"confirm_password\",\n                  name: \"confirm_password\",\n                  value: values.confirm_password,\n                  validate: validatePassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback d-block\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: \"/login\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Already have an Account? Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-end align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  className: \"btn-shadow\",\n                  size: \"lg\",\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(IntlMessages, {\n                    id: \"register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\n\nconst mapStateToProps = ({\n  authUser\n}) => {\n  const {\n    loading,\n    error\n  } = authUser;\n  return {\n    loading,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUserAction: registerUser\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/pages/authentication/register.js"],"names":["React","Formik","Form","Field","Row","Card","CardTitle","FormGroup","Label","Col","Button","NavLink","useParams","connect","registerUser","IntlMessages","Register","history","registerUserAction","validatePassword","value","error","length","validateEmail","test","username","onUserRegister","values","password","confirm_password","role","console","log","initialValues","email","errors","touched","handleChange","name","mapStateToProps","authUser","loading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport {\n    Row,\n    Card,\n    CardTitle,\n    FormGroup,\n    Label,\n    Col,\n    Button,\n} from 'reactstrap';\nimport { NavLink , useParams} from 'react-router-dom';\n// import \"../../authorization.scss\"\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../redux/actions';\n\nimport IntlMessages from '../../helpers/IntlMessages';\n\n/* import { Colxx } from '../../components/common/CustomBootstrap'; */\n\n\nconst Register = ({ history, registerUserAction }) => {\n\n\n    const validatePassword = (value) => {\n        let error;\n        if (!value) {\n            error = 'Please enter your password';\n        } else if (value.length < 4) {\n            error = 'Value must be longer than 3 characters';\n        }\n        return error;\n    };\n\n    const validateEmail = (value) => {\n        let error;\n        if (!value) {\n            error = 'Please enter your email address';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n            error = 'Invalid email address';\n        }\n        return error;\n    };\n\n    const username = (value) => {\n        let error;\n        if (!value) {\n            error = 'Please enter your username';\n        } else if (value.length < 2) {\n            error = 'Value must be longer than 2 characters';\n        }\n        return error;\n    };\n\n\n    const onUserRegister = (values) => {\n        if (values.password === values.confirm_password) {\n            registerUserAction(values, history)\n\n        }\n\n    };\n\n    const {role} = useParams;\n    console.log(\"role\", role)\n    const initialValues = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        role: null\n    };\n    return (\n        <Row className=\"h-100\">\n            <Col xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\n                <Card className=\"auth-card\">\n                    <div className=\"position-relative image-side \">\n                        <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\n                        <p className=\"white mb-0\">\n                            Please use this form to register. <br />\n              If you are a member, please{' '}\n                            <NavLink to=\"/user/login\" className=\"white\">\n                                login\n              </NavLink>\n              .\n            </p>\n                    </div>\n                    <div className=\"form-side\">\n                        <NavLink to=\"/\" className=\"white\">\n                            <span className=\"logo-single\" />\n                        </NavLink>\n                        <CardTitle className=\"mb-5\">\n                            <IntlMessages id=\"Register\" />\n                        </CardTitle>\n                        <Formik initialValues={initialValues} onSubmit={onUserRegister}>\n                            {({ errors, touched, handleChange, values }) => (\n                                <Form className=\"av-tooltip tooltip-label-bottom\">\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                            <IntlMessages id=\"username\" />\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"name\" name=\"name\" value={values.name} validate={username} />\n                                        {errors.username && touched.username && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.username}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n\n\n\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                            <IntlMessages id=\"email\" />\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"email\" name=\"email\" value={values.email} validate={validateEmail} />\n                                        {errors.email && touched.email && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.email}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                            <IntlMessages id=\"password\" />\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"password\" name=\"password\" value={values.password} validate={validatePassword} />\n                                        {errors.password && touched.password && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.password}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                            <IntlMessages id=\"confirm password\" />\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"confirm_password\" name=\"confirm_password\" value={values.confirm_password} validate={validatePassword} />\n                                        {errors.password && touched.password && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.password}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <NavLink to=\"/login\">\n                                            <span>Already have an Account? Login</span>\n                                        </NavLink>\n                                    </div>\n                                    <div className=\"d-flex justify-content-end align-items-center\">\n\n                                        <Button\n                                            color=\"primary\"\n                                            className=\"btn-shadow\"\n                                            size=\"lg\"\n                                            type=\"submit\"\n                                        >\n                                            <IntlMessages id=\"register\" />\n                                        </Button>\n                                    </div>\n                                </Form>\n                            )}\n                        </Formik>\n                    </div>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nconst mapStateToProps = ({ authUser }) => { \n  const { loading, error } = authUser;\n  return { loading, error };\n};\n\nexport default (connect(mapStateToProps, {\n  registerUserAction: registerUser,\n}))(Register);\n"]},"metadata":{},"sourceType":"module"}