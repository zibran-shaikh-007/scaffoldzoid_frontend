{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar error_1 = require(\"./error\");\n\nvar parser_1 = require(\"./parser\");\n\nvar types_1 = require(\"./types\");\n\nfunction pruneLocation(els) {\n  els.forEach(function (el) {\n    delete el.location;\n\n    if (types_1.isSelectElement(el) || types_1.isPluralElement(el)) {\n      for (var k in el.options) {\n        delete el.options[k].location;\n        pruneLocation(el.options[k].value);\n      }\n    } else if (types_1.isNumberElement(el) && types_1.isNumberSkeleton(el.style)) {\n      delete el.style.location;\n    } else if ((types_1.isDateElement(el) || types_1.isTimeElement(el)) && types_1.isDateTimeSkeleton(el.style)) {\n      delete el.style.location;\n    } else if (types_1.isTagElement(el)) {\n      pruneLocation(el.children);\n    }\n  });\n}\n\nfunction parse(message, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  opts = tslib_1.__assign({\n    shouldParseSkeletons: true\n  }, opts);\n  var result = new parser_1.Parser(message, opts).parse();\n\n  if (result.err) {\n    var error = SyntaxError(error_1.ErrorKind[result.err.kind]); // @ts-expect-error Assign to error object\n\n    error.location = result.err.location;\n    throw error;\n  }\n\n  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\n    pruneLocation(result.val);\n  }\n\n  return result.val;\n}\n\nexports.parse = parse;\n\ntslib_1.__exportStar(require(\"./types\"), exports);","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/node_modules/@formatjs/icu-messageformat-parser/index.js"],"names":["Object","defineProperty","exports","value","parse","tslib_1","require","error_1","parser_1","types_1","pruneLocation","els","forEach","el","location","isSelectElement","isPluralElement","k","options","isNumberElement","isNumberSkeleton","style","isDateElement","isTimeElement","isDateTimeSkeleton","isTagElement","children","message","opts","__assign","shouldParseSkeletons","result","Parser","err","error","SyntaxError","ErrorKind","kind","captureLocation","val","__exportStar"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAArB;;AACA,SAASI,aAAT,CAAuBC,GAAvB,EAA4B;AACxBA,EAAAA,GAAG,CAACC,OAAJ,CAAY,UAAUC,EAAV,EAAc;AACtB,WAAOA,EAAE,CAACC,QAAV;;AACA,QAAIL,OAAO,CAACM,eAAR,CAAwBF,EAAxB,KAA+BJ,OAAO,CAACO,eAAR,CAAwBH,EAAxB,CAAnC,EAAgE;AAC5D,WAAK,IAAII,CAAT,IAAcJ,EAAE,CAACK,OAAjB,EAA0B;AACtB,eAAOL,EAAE,CAACK,OAAH,CAAWD,CAAX,EAAcH,QAArB;AACAJ,QAAAA,aAAa,CAACG,EAAE,CAACK,OAAH,CAAWD,CAAX,EAAcd,KAAf,CAAb;AACH;AACJ,KALD,MAMK,IAAIM,OAAO,CAACU,eAAR,CAAwBN,EAAxB,KAA+BJ,OAAO,CAACW,gBAAR,CAAyBP,EAAE,CAACQ,KAA5B,CAAnC,EAAuE;AACxE,aAAOR,EAAE,CAACQ,KAAH,CAASP,QAAhB;AACH,KAFI,MAGA,IAAI,CAACL,OAAO,CAACa,aAAR,CAAsBT,EAAtB,KAA6BJ,OAAO,CAACc,aAAR,CAAsBV,EAAtB,CAA9B,KACLJ,OAAO,CAACe,kBAAR,CAA2BX,EAAE,CAACQ,KAA9B,CADC,EACqC;AACtC,aAAOR,EAAE,CAACQ,KAAH,CAASP,QAAhB;AACH,KAHI,MAIA,IAAIL,OAAO,CAACgB,YAAR,CAAqBZ,EAArB,CAAJ,EAA8B;AAC/BH,MAAAA,aAAa,CAACG,EAAE,CAACa,QAAJ,CAAb;AACH;AACJ,GAlBD;AAmBH;;AACD,SAAStB,KAAT,CAAeuB,OAAf,EAAwBC,IAAxB,EAA8B;AAC1B,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,IAAAA,IAAI,GAAG,EAAP;AAAY;;AACnCA,EAAAA,IAAI,GAAGvB,OAAO,CAACwB,QAAR,CAAiB;AAAEC,IAAAA,oBAAoB,EAAE;AAAxB,GAAjB,EAAiDF,IAAjD,CAAP;AACA,MAAIG,MAAM,GAAG,IAAIvB,QAAQ,CAACwB,MAAb,CAAoBL,OAApB,EAA6BC,IAA7B,EAAmCxB,KAAnC,EAAb;;AACA,MAAI2B,MAAM,CAACE,GAAX,EAAgB;AACZ,QAAIC,KAAK,GAAGC,WAAW,CAAC5B,OAAO,CAAC6B,SAAR,CAAkBL,MAAM,CAACE,GAAP,CAAWI,IAA7B,CAAD,CAAvB,CADY,CAEZ;;AACAH,IAAAA,KAAK,CAACpB,QAAN,GAAiBiB,MAAM,CAACE,GAAP,CAAWnB,QAA5B;AACA,UAAMoB,KAAN;AACH;;AACD,MAAI,EAAEN,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACU,eAAnD,CAAJ,EAAyE;AACrE5B,IAAAA,aAAa,CAACqB,MAAM,CAACQ,GAAR,CAAb;AACH;;AACD,SAAOR,MAAM,CAACQ,GAAd;AACH;;AACDrC,OAAO,CAACE,KAAR,GAAgBA,KAAhB;;AACAC,OAAO,CAACmC,YAAR,CAAqBlC,OAAO,CAAC,SAAD,CAA5B,EAAyCJ,OAAzC","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\nvar tslib_1 = require(\"tslib\");\nvar error_1 = require(\"./error\");\nvar parser_1 = require(\"./parser\");\nvar types_1 = require(\"./types\");\nfunction pruneLocation(els) {\n    els.forEach(function (el) {\n        delete el.location;\n        if (types_1.isSelectElement(el) || types_1.isPluralElement(el)) {\n            for (var k in el.options) {\n                delete el.options[k].location;\n                pruneLocation(el.options[k].value);\n            }\n        }\n        else if (types_1.isNumberElement(el) && types_1.isNumberSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if ((types_1.isDateElement(el) || types_1.isTimeElement(el)) &&\n            types_1.isDateTimeSkeleton(el.style)) {\n            delete el.style.location;\n        }\n        else if (types_1.isTagElement(el)) {\n            pruneLocation(el.children);\n        }\n    });\n}\nfunction parse(message, opts) {\n    if (opts === void 0) { opts = {}; }\n    opts = tslib_1.__assign({ shouldParseSkeletons: true }, opts);\n    var result = new parser_1.Parser(message, opts).parse();\n    if (result.err) {\n        var error = SyntaxError(error_1.ErrorKind[result.err.kind]);\n        // @ts-expect-error Assign to error object\n        error.location = result.err.location;\n        throw error;\n    }\n    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\n        pruneLocation(result.val);\n    }\n    return result.val;\n}\nexports.parse = parse;\ntslib_1.__exportStar(require(\"./types\"), exports);\n"]},"metadata":{},"sourceType":"script"}