{"ast":null,"code":"import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { SetNumberFormatDigitOptions } from '../NumberFormat/SetNumberFormatDigitOptions';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nexport function InitializePluralRules(pl, locales, options, _a) {\n  var availableLocales = _a.availableLocales,\n      relevantExtensionKeys = _a.relevantExtensionKeys,\n      localeData = _a.localeData,\n      getDefaultLocale = _a.getDefaultLocale,\n      getInternalSlots = _a.getInternalSlots;\n  var requestedLocales = CanonicalizeLocaleList(locales);\n  var opt = Object.create(null);\n  var opts = CoerceOptionsToObject(options);\n  var internalSlots = getInternalSlots(pl);\n  internalSlots.initializedPluralRules = true;\n  var matcher = GetOption(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n  opt.localeMatcher = matcher;\n  internalSlots.type = GetOption(opts, 'type', 'string', ['cardinal', 'ordinal'], 'cardinal');\n  SetNumberFormatDigitOptions(internalSlots, opts, 0, 3, 'standard');\n  var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n  internalSlots.locale = r.locale;\n  return pl;\n}","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/node_modules/@formatjs/ecma402-abstract/lib/PluralRules/InitializePluralRules.js"],"names":["CanonicalizeLocaleList","GetOption","SetNumberFormatDigitOptions","ResolveLocale","CoerceOptionsToObject","InitializePluralRules","pl","locales","options","_a","availableLocales","relevantExtensionKeys","localeData","getDefaultLocale","getInternalSlots","requestedLocales","opt","Object","create","opts","internalSlots","initializedPluralRules","matcher","localeMatcher","type","r","locale"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,2BAAvC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,2BAAT,QAA4C,6CAA5C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAO,SAASC,qBAAT,CAA+BC,EAA/B,EAAmCC,OAAnC,EAA4CC,OAA5C,EAAqDC,EAArD,EAAyD;AAC5D,MAAIC,gBAAgB,GAAGD,EAAE,CAACC,gBAA1B;AAAA,MAA4CC,qBAAqB,GAAGF,EAAE,CAACE,qBAAvE;AAAA,MAA8FC,UAAU,GAAGH,EAAE,CAACG,UAA9G;AAAA,MAA0HC,gBAAgB,GAAGJ,EAAE,CAACI,gBAAhJ;AAAA,MAAkKC,gBAAgB,GAAGL,EAAE,CAACK,gBAAxL;AACA,MAAIC,gBAAgB,GAAGf,sBAAsB,CAACO,OAAD,CAA7C;AACA,MAAIS,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAV;AACA,MAAIC,IAAI,GAAGf,qBAAqB,CAACI,OAAD,CAAhC;AACA,MAAIY,aAAa,GAAGN,gBAAgB,CAACR,EAAD,CAApC;AACAc,EAAAA,aAAa,CAACC,sBAAd,GAAuC,IAAvC;AACA,MAAIC,OAAO,GAAGrB,SAAS,CAACkB,IAAD,EAAO,eAAP,EAAwB,QAAxB,EAAkC,CAAC,UAAD,EAAa,QAAb,CAAlC,EAA0D,UAA1D,CAAvB;AACAH,EAAAA,GAAG,CAACO,aAAJ,GAAoBD,OAApB;AACAF,EAAAA,aAAa,CAACI,IAAd,GAAqBvB,SAAS,CAACkB,IAAD,EAAO,MAAP,EAAe,QAAf,EAAyB,CAAC,UAAD,EAAa,SAAb,CAAzB,EAAkD,UAAlD,CAA9B;AACAjB,EAAAA,2BAA2B,CAACkB,aAAD,EAAgBD,IAAhB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,UAA5B,CAA3B;AACA,MAAIM,CAAC,GAAGtB,aAAa,CAACO,gBAAD,EAAmBK,gBAAnB,EAAqCC,GAArC,EAA0CL,qBAA1C,EAAiEC,UAAjE,EAA6EC,gBAA7E,CAArB;AACAO,EAAAA,aAAa,CAACM,MAAd,GAAuBD,CAAC,CAACC,MAAzB;AACA,SAAOpB,EAAP;AACH","sourcesContent":["import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { SetNumberFormatDigitOptions } from '../NumberFormat/SetNumberFormatDigitOptions';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nexport function InitializePluralRules(pl, locales, options, _a) {\n    var availableLocales = _a.availableLocales, relevantExtensionKeys = _a.relevantExtensionKeys, localeData = _a.localeData, getDefaultLocale = _a.getDefaultLocale, getInternalSlots = _a.getInternalSlots;\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var opt = Object.create(null);\n    var opts = CoerceOptionsToObject(options);\n    var internalSlots = getInternalSlots(pl);\n    internalSlots.initializedPluralRules = true;\n    var matcher = GetOption(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n    opt.localeMatcher = matcher;\n    internalSlots.type = GetOption(opts, 'type', 'string', ['cardinal', 'ordinal'], 'cardinal');\n    SetNumberFormatDigitOptions(internalSlots, opts, 0, 3, 'standard');\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n    internalSlots.locale = r.locale;\n    return pl;\n}\n"]},"metadata":{},"sourceType":"module"}