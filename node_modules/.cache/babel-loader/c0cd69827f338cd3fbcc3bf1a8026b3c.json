{"ast":null,"code":"import React,{useEffect}from'react';import{Row,Card,CardTitle,Label,FormGroup,Button,Col}from'reactstrap';import{NavLink}from'react-router-dom';import{connect}from'react-redux';import{Formik,Form,Field}from'formik';import{loginUser}from'../../redux/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validatePassword=function validatePassword(value){var error;if(!value){error='Please enter your password';}else if(value.length<4){error='Value must be longer than 3 characters';}return error;};var validateEmail=function validateEmail(value){var error;if(!value){error='Please enter your email address';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)){error='Invalid email address';}return error;};var Login=function Login(_ref){var history=_ref.history,loading=_ref.loading,error=_ref.error,loginUserAction=_ref.loginUserAction;useEffect(function(){});var onUserLogin=function onUserLogin(values){if(!loading){if(values.email!==''&&values.password!==''){loginUserAction(values,history);}}};var initialValues={email:\"\",password:\"\"};return/*#__PURE__*/_jsx(Row,{className:\"h-50\",style:{marginTop:\"100px\"},children:/*#__PURE__*/_jsx(Col,{xxs:\"12\",md:\"6\",className:\"mx-auto\",children:/*#__PURE__*/_jsxs(Card,{className:\"auth-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative image-side\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-white h2\",children:\"Scaffoldzoid\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"white mb-0\",children:[\"Please use your credentials to login.\",/*#__PURE__*/_jsx(\"br\",{}),\"If you are not a member, you can register as seller or buyer\",' ',/*#__PURE__*/_jsx(NavLink,{to:\"/\",className:\"white\",children:\"Homepage\"}),\".\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-side\",children:[/*#__PURE__*/_jsx(NavLink,{to:\"/\",className:\"white\",children:/*#__PURE__*/_jsx(\"span\",{className:\"logo-single\"})}),/*#__PURE__*/_jsx(CardTitle,{className:\"mb-4\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Login\"})}),/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:onUserLogin,children:function children(_ref2){var errors=_ref2.errors,touched=_ref2.touched;return/*#__PURE__*/_jsxs(Form,{className:\"av-tooltip tooltip-label-bottom\",children:[/*#__PURE__*/_jsxs(FormGroup,{className:\"form-group has-float-label\",children:[/*#__PURE__*/_jsx(Label,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Email\"})}),/*#__PURE__*/_jsx(Field,{className:\"form-control\",name:\"email\",validate:validateEmail}),errors.email&&touched.email&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback d-block\",children:errors.email})]}),/*#__PURE__*/_jsxs(FormGroup,{className:\"form-group has-float-label\",children:[/*#__PURE__*/_jsx(Label,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Password\"})}),/*#__PURE__*/_jsx(Field,{className:\"form-control\",type:\"password\",name:\"password\",validate:validatePassword,autoComplete:\"on\"}),errors.password&&touched.password&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback d-block\",children:errors.password})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(Button,{type:\"submit\",color:\"primary\",className:\"btn-shadow btn-multiple-state \".concat(loading?'show-spinner':''),size:\"lg\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"spinner d-inline-block\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"bounce1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"bounce2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"bounce3\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Login\"})})]})})]});}})]})]})})});};var mapStateToProps=function mapStateToProps(_ref3){var authUser=_ref3.authUser;var loading=authUser.loading;return{loading:loading};};export default connect(mapStateToProps,{loginUserAction:loginUser})(Login);","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/pages/authentication/login.js"],"names":["React","useEffect","Row","Card","CardTitle","Label","FormGroup","Button","Col","NavLink","connect","Formik","Form","Field","loginUser","validatePassword","value","error","length","validateEmail","test","Login","history","loading","loginUserAction","onUserLogin","values","email","password","initialValues","marginTop","errors","touched","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, {useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button, Col } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form, Field } from 'formik';\nimport { loginUser } from '../../redux/actions';\n\n\n\nconst validatePassword = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your password';\n  } else if (value.length < 4) {\n    error = 'Value must be longer than 3 characters';\n  }\n  return error;\n};\n\nconst validateEmail = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your email address';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n};\n\nconst Login = ({ history, loading, error, loginUserAction }) => {\n\n\n  useEffect(() => {\n\n  });\n\n  const onUserLogin = (values) => {\n    if (!loading) {\n      if (values.email !== '' && values.password !== '') {\n        loginUserAction(values, history);\n      }\n    }\n  };\n\n  const initialValues = { email: \"\", password: \"\" };\n\n  return (\n    <Row className=\"h-50\" style={{marginTop:\"100px\"}}>\n      <Col xxs=\"12\" md=\"6\" className=\"mx-auto\">\n        <Card className=\"auth-card\">\n          <div className=\"position-relative image-side\">\n            <p className=\"text-white h2\">Scaffoldzoid</p>\n            <p className=\"white mb-0\">\n              Please use your credentials to login.\n              <br />\n              If you are not a member, you can register as seller or buyer{' '}\n              <NavLink to=\"/\" className=\"white\">\n                Homepage\n              </NavLink>\n              .\n            </p>\n          </div>\n          <div className=\"form-side\">\n            <NavLink to=\"/\" className=\"white\">\n              <span className=\"logo-single\" />\n            </NavLink>\n            <CardTitle className=\"mb-4\">\n              <span>Login</span>\n\n            </CardTitle>\n\n            <Formik initialValues={initialValues} onSubmit={onUserLogin}>\n              {({ errors, touched }) => (\n                <Form className=\"av-tooltip tooltip-label-bottom\">\n                  <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n\n                      <span>Email</span>\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"email\"\n                      validate={validateEmail}\n                    />\n                    {errors.email && touched.email && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.email}\n                      </div>\n                    )}\n                  </FormGroup>\n                  <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n                      <span>Password</span>\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      validate={validatePassword}\n                      autoComplete=\"on\"\n                    />\n                    {errors.password && touched.password && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.password}\n                      </div>\n                    )}\n                  </FormGroup>\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    {/* <NavLink to=\"/user/forgot-password\">\n                      <IntlMessages id=\"user.forgot-password-question\" />\n                    </NavLink> */}\n                    <Button type=\"submit\"\n                      color=\"primary\"\n                      className={`btn-shadow btn-multiple-state ${loading ? 'show-spinner' : ''\n                        }`}\n                      size=\"lg\"\n                    >\n                      <span className=\"spinner d-inline-block\">\n                        <span className=\"bounce1\" />\n                        <span className=\"bounce2\" />\n                        <span className=\"bounce3\" />\n                      </span>\n                      <span className=\"label\">\n                        <span>Login</span>\n                      </span>\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\nconst mapStateToProps = ({ authUser }) => {\n  const { loading } = authUser;\n\n  return {\n    loading\n  };\n\n};\n\nexport default connect(mapStateToProps, {\n  loginUserAction: loginUser,\n})(Login);\n"]},"metadata":{},"sourceType":"module"}