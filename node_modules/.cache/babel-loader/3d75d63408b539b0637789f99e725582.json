{"ast":null,"code":"var _jsxFileName = \"/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/pages/seller/productsUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Label, Button, CardTitle } from 'reactstrap';\nimport { getSelectedProduct, productUpdate } from \"../../redux/product/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEdit = ({\n  getSelectedProductAction,\n  selectedProduct,\n  productUpdateAction,\n  history\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  console.log(\"id for update\", id);\n\n  const getSelectedProduct = () => {\n    getSelectedProductAction(id, history);\n  };\n\n  useEffect(() => {\n    getSelectedProduct();\n  }, []);\n  const initialValues = {\n    id: selectedProduct.id,\n    user_id: selectedProduct.user_id,\n    name: selectedProduct.name,\n    rate: selectedProduct.rate\n  };\n\n  const onSubmit = (values, {\n    resetForm,\n    setSubmitting\n  }) => {\n    productUpdateAction(values, history);\n    resetForm();\n    setSubmitting(false);\n  };\n\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Please enter Orange Name / Type'),\n    rate: Yup.number().min(1, 'Very Less Price!').max(50, 'Too Long!').required('Please enter Price for Orange')\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4 d-flex justify-content-center align-items-center\",\n        style: {\n          height: \"75vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xxs: \"12\",\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Update Orange Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: initialValues,\n                enableReinitialize: true,\n                validationSchema: SignupSchema,\n                onSubmit: onSubmit,\n                children: ({\n                  handleSubmit,\n                  setFieldValue,\n                  setFieldTouched,\n                  handleChange,\n                  handleBlur,\n                  values,\n                  errors,\n                  touched,\n                  isSubmitting,\n                  onValueChange\n                }) => /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"av-tooltip tooltip-label-bottom\",\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      xxs: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"form-group has-float-label\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Name / Type\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 113,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          className: \"form-control\",\n                          name: \"name\",\n                          value: values.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 57\n                        }, this), errors.name && touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"invalid-feedback d-block\",\n                          children: errors.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 61\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      xxs: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        className: \"form-group has-float-label\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Rate (Rupees/Kg)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 133,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          className: \"form-control\",\n                          name: \"rate\",\n                          type: \"number\",\n                          value: values.rate\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 135,\n                          columnNumber: 57\n                        }, this), errors.rate && touched.rate ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"invalid-feedback d-block\",\n                          children: errors.rate\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 61\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    className: \"mt-3\",\n                    children: isSubmitting ? \"loading\" : \"Update Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductEdit, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductEdit;\n\nconst mapStateToProps = ({\n  sellerProduct\n}) => {\n  const {\n    selectedProduct,\n    loading\n  } = sellerProduct;\n  console.log(\"selectedProduct\", selectedProduct);\n  return {\n    selectedProduct,\n    loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSelectedProductAction: getSelectedProduct,\n  productUpdateAction: productUpdate\n})(ProductEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEdit\");","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/pages/seller/productsUpdate.js"],"names":["React","useEffect","connect","useParams","Yup","Formik","Form","Field","Container","Row","Col","Card","CardBody","FormGroup","Label","Button","CardTitle","getSelectedProduct","productUpdate","ProductEdit","getSelectedProductAction","selectedProduct","productUpdateAction","history","id","console","log","initialValues","user_id","name","rate","onSubmit","values","resetForm","setSubmitting","SignupSchema","object","shape","string","min","max","required","number","height","handleSubmit","setFieldValue","setFieldTouched","handleChange","handleBlur","errors","touched","isSubmitting","onValueChange","mapStateToProps","sellerProduct","loading"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\"\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\n\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    FormGroup,\n    Label,\n    Button,\n    CardTitle,\n} from 'reactstrap';\nimport { getSelectedProduct, productUpdate } from \"../../redux/product/actions\"\n\n\n\n\nconst ProductEdit = ({ getSelectedProductAction, selectedProduct, productUpdateAction, history }) => {\n\n    const { id } = useParams()\n    console.log(\"id for update\", id)\n\n    const getSelectedProduct = () => {\n        getSelectedProductAction(id, history)\n\n    }\n    useEffect(() => {\n        getSelectedProduct()\n    }, [])\n\n\n    const initialValues = {\n        id: selectedProduct.id,\n        user_id: selectedProduct.user_id,\n        name: selectedProduct.name,\n        rate: selectedProduct.rate,\n    }\n\n\n\n    const onSubmit = (values, { resetForm, setSubmitting }) => {\n\n        productUpdateAction(values, history)\n        resetForm()\n        setSubmitting(false);\n\n    };\n\n    const SignupSchema = Yup.object().shape({\n        name: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Please enter Orange Name / Type'),\n        rate: Yup.number()\n            .min(1, 'Very Less Price!')\n            .max(50, 'Too Long!')\n            .required('Please enter Price for Orange'),\n\n    });\n\n\n\n    return (\n\n\n        <>\n            <Container >\n                <Row className=\"mb-4 d-flex justify-content-center align-items-center\" style={{ height: \"75vh\" }}>\n                    <Col xxs=\"12\" md=\"6\">\n                        <Card>\n                            <CardBody>\n                                <CardTitle>\n                                    <span>Update Orange Details</span>\n\n                                </CardTitle>\n\n                                <Formik\n                                    initialValues={initialValues}\n                                    enableReinitialize={true}\n                                    validationSchema={SignupSchema}\n                                    onSubmit={onSubmit}\n\n                                >\n                                    {({\n                                        handleSubmit,\n                                        setFieldValue,\n                                        setFieldTouched,\n                                        handleChange,\n                                        handleBlur,\n                                        values,\n                                        errors,\n                                        touched,\n                                        isSubmitting,\n                                        onValueChange,\n\n\n                                    }) => (\n\n                                        <Form className=\"av-tooltip tooltip-label-bottom\">\n\n\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n\n\n                                                        <Label>\n                                                        <span>Name / Type</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"name\" value={values.name} />\n\n                                                        {errors.name && touched.name ? (\n                                                            <div className=\"invalid-feedback d-block\">\n                                                                {errors.name}\n                                                            </div>\n                                                        ) : null}\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n\n\n                                                        <Label>\n                                                        <span>Rate (Rupees/Kg)</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"rate\" type=\"number\" value={values.rate} />\n                                                        {errors.rate && touched.rate ? (\n                                                            <div className=\"invalid-feedback d-block\">\n                                                                {errors.rate}\n                                                            </div>\n                                                        ) : null}\n\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n\n                                            <Button color=\"primary\" type=\"submit\" className=\"mt-3\" >\n                                                {isSubmitting ? \"loading\" : \"Update Product\"}\n                                            </Button>\n                                        </Form>\n                                    )}\n                                </Formik>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n\n                </Row>\n            </Container>\n\n\n        </>\n    );\n}\n\nconst mapStateToProps = ({ sellerProduct }) => {\n    const { selectedProduct, loading } = sellerProduct;\n    console.log(\"selectedProduct\", selectedProduct)\n\n    return { selectedProduct, loading };\n\n\n};\n\n\nexport default connect(mapStateToProps, { getSelectedProductAction: getSelectedProduct, productUpdateAction: productUpdate })(ProductEdit)\n\n"]},"metadata":{},"sourceType":"module"}