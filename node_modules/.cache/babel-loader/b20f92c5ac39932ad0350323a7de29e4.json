{"ast":null,"code":"var _jsxFileName = \"/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/pages/seller/products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport { allProducts } from \"../../redux/product/actions\";\nimport { getCurrentUser } from \"../../helpers/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst expandRow = {\n  renderer: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Action :\", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"mr-3 text-primary\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"mdi mdi-eye font-size-18 ml-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true),\n  showExpandColumn: true,\n  expandByColumnOnly: true\n};\n\nconst Product = ({\n  history,\n  allProductsAction,\n  allProduct\n}) => {\n  _s();\n\n  const getProductData = () => {\n    const user_id = getCurrentUser().id;\n    allProductsAction(user_id, history);\n  };\n\n  useEffect(() => {\n    getProductData();\n  }, []);\n  const data = {\n    columns: [{\n      dataField: 'id',\n      text: 'No.'\n    }, {\n      dataField: \"name\",\n      text: \"Type\"\n    }, {\n      dataField: \"rate\",\n      text: \"Rate (Rupees/kg)\"\n    }],\n    rows: allProduct.map(products => [{\n      id: `${products.id}`,\n      name: `${products.name}`,\n      rate: `${products.rate}`\n    }])\n  };\n  const options = {\n    // pageStartIndex: 0,\n    hideSizePerPage: false,\n    hidePageListOnlyOnePage: false,\n    sizePerPageList: [{\n      text: '5th',\n      value: 5\n    }, {\n      text: '10th',\n      value: 10\n    }, {\n      text: 'All',\n      value: data.rows.length\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"md\",\n          className: \"offset-md-1\",\n          onClick: () => history.push('/seller/product/add'),\n          children: [\"Add New Product\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \" +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 130\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 9,\n        className: \"mt-5 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title mb-4\",\n              children: \"All Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n              keyField: \"id\",\n              data: data.rows,\n              columns: data.columns,\n              expandRow: expandRow,\n              pagination: paginationFactory(options)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Product, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Product;\n\nconst mapStateToProps = ({\n  sellerProduct\n}) => {\n  const {\n    allProduct,\n    loading\n  } = sellerProduct;\n  console.log(\"data\", allProducts);\n  return {\n    allProduct,\n    loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  allProductsAction: allProducts\n})(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/pages/seller/products.js"],"names":["React","useEffect","Link","connect","BootstrapTable","paginationFactory","Row","Col","Card","CardBody","Button","allProducts","getCurrentUser","expandRow","renderer","row","showExpandColumn","expandByColumnOnly","Product","history","allProductsAction","allProduct","getProductData","user_id","id","data","columns","dataField","text","rows","map","products","name","rate","options","hideSizePerPage","hidePageListOnlyOnePage","sizePerPageList","value","length","push","mapStateToProps","sellerProduct","loading","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n\n    Button\n\n} from 'reactstrap'\nimport { allProducts } from \"../../redux/product/actions\"\nimport { getCurrentUser } from \"../../helpers/Utils\";\n\nconst expandRow = {\n    renderer: row => (\n        <>\n            Action :\n            <Link to=\"#\" className=\"mr-3 text-primary\"><i className=\"mdi mdi-eye font-size-18 ml-2\"></i></Link>\n            {/*  <Link to=\"#\" className=\"text-danger\" ><i className=\"mdi mdi-trash-can font-size-18\"></i></Link> */}\n        </>\n    ),\n    showExpandColumn: true,\n    expandByColumnOnly: true\n};\n\n\n\nconst Product = ({ history, allProductsAction , allProduct}) => {\n\n    const getProductData = () => {\n        const user_id = getCurrentUser().id\n        allProductsAction(user_id, history)\n\n    }\n\n\n    useEffect(() => {\n        getProductData()\n    }, [])\n\n    const data = {\n        columns: [\n            {\n                dataField: 'id',\n                text: 'No.'\n            },\n            {\n                dataField: \"name\",\n                text: \"Type\"\n            },\n            {\n                dataField: \"rate\",\n                text: \"Rate (Rupees/kg)\"\n            },\n    \n    \n        ],\n        rows: allProduct.map(products => [\n            {\n    \n                id: `${products.id}`,\n                name: `${products.name}`,\n                rate: `${products.rate}`,\n    \n            },\n    \n        ])\n    }\n    \n\n\n    const options = {\n        // pageStartIndex: 0,\n        hideSizePerPage: false,\n        hidePageListOnlyOnePage: false,\n        sizePerPageList:\n            [{\n                text: '5th', value: 5\n            }, {\n                text: '10th', value: 10\n            }, {\n                text: 'All', value: data.rows.length\n            }]\n\n    };\n\n\n    return (\n        <>\n            <Row className=\"mt-5\">\n                <Col xs=\"4\">\n\n                    <Button size=\"md\" className=\"offset-md-1\" onClick={() => history.push('/seller/product/add')}>Add New Product<sup> +</sup></Button>\n\n                </Col>\n            </Row>\n            <Row>\n\n                <Col lg={9} className='mt-5 mx-auto'>\n                    <Card>\n                        <CardBody>\n\n\n                            <h4 className=\"card-title mb-4\">All Products</h4>\n\n                            <BootstrapTable\n                                keyField='id'\n                                data={data.rows}\n                                columns={data.columns}\n                                expandRow={expandRow}\n                                pagination={paginationFactory(options)}\n\n                            />\n                        </CardBody>\n                    </Card>\n                </Col>\n\n            </Row>\n        </>\n    );\n}\n\n\nconst mapStateToProps = ({ sellerProduct }) => {\n    const { allProduct, loading } = sellerProduct;\n    console.log(\"data\", allProducts)\n\n    return { allProduct, loading };\n\n\n};\n\n\nexport default connect(mapStateToProps, { allProductsAction: allProducts })(Product)\n\n"]},"metadata":{},"sourceType":"module"}