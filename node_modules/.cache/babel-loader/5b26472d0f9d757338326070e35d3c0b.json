{"ast":null,"code":"var _jsxFileName = \"/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/routes/public.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getCurrentUser } from \"../helpers/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(getCurrentUser().role, \"current user role\");\n\nconst PublicRoute = ({\n  component: Component,\n  restricted,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => (getCurrentUser().role === \"buyer\" && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/buyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }, this)) || (getCurrentUser().role === \"seller\" && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/seller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/routes/public.js"],"names":["React","Route","Redirect","getCurrentUser","console","log","role","PublicRoute","component","Component","restricted","rest","props"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEAC,OAAO,CAACC,GAAR,CAAYF,cAAc,GAAGG,IAA7B,EAAmC,mBAAnC;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAD,KAAmD;AACnE;AAAA;AACI;AACA;AAEA,YAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAE1B,CAACT,cAAc,GAAGG,IAAjB,KAA0B,OAA1B,IAAqCI,UAArC,gBACG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADH,gBAEK,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,cAFN,MAICT,cAAc,GAAGG,IAAjB,KAA0B,QAA1B,IAAsCI,UAAtC,gBACG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADH,gBAEK,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,cANN;AAFJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAmBH,CApBD;;KAAML,W;AAsBN,eAAeA,WAAf","sourcesContent":["\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getCurrentUser } from \"../helpers/Utils\";\n\nconsole.log(getCurrentUser().role, \"current user role\")\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n\n        <Route {...rest} render={props => (\n\n            (getCurrentUser().role === \"buyer\" && restricted ?\n                <Redirect to=\"/buyer\" />\n                : <Component {...props} />)\n            ||\n            (getCurrentUser().role === \"seller\" && restricted ?\n                <Redirect to=\"/seller\" />\n                : <Component {...props} />)\n\n\n\n\n        )} />\n    );\n};\n\nexport default PublicRoute;"]},"metadata":{},"sourceType":"module"}