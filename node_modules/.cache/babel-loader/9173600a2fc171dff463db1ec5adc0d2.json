{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNumberElement = exports.createLiteralElement = exports.isDateTimeSkeleton = exports.isNumberSkeleton = exports.isTagElement = exports.isPoundElement = exports.isPluralElement = exports.isSelectElement = exports.isTimeElement = exports.isDateElement = exports.isNumberElement = exports.isArgumentElement = exports.isLiteralElement = exports.SKELETON_TYPE = exports.TYPE = void 0;\nvar TYPE;\n\n(function (TYPE) {\n  /**\n   * Raw text\n   */\n  TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n  /**\n   * Variable w/o any format, e.g `var` in `this is a {var}`\n   */\n\n  TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n  /**\n   * Variable w/ number format\n   */\n\n  TYPE[TYPE[\"number\"] = 2] = \"number\";\n  /**\n   * Variable w/ date format\n   */\n\n  TYPE[TYPE[\"date\"] = 3] = \"date\";\n  /**\n   * Variable w/ time format\n   */\n\n  TYPE[TYPE[\"time\"] = 4] = \"time\";\n  /**\n   * Variable w/ select format\n   */\n\n  TYPE[TYPE[\"select\"] = 5] = \"select\";\n  /**\n   * Variable w/ plural format\n   */\n\n  TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n  /**\n   * Only possible within plural argument.\n   * This is the `#` symbol that will be substituted with the count.\n   */\n\n  TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n  /**\n   * XML-like tag\n   */\n\n  TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE = exports.TYPE || (exports.TYPE = {}));\n\nvar SKELETON_TYPE;\n\n(function (SKELETON_TYPE) {\n  SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n  SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE = exports.SKELETON_TYPE || (exports.SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\n\n\nfunction isLiteralElement(el) {\n  return el.type === TYPE.literal;\n}\n\nexports.isLiteralElement = isLiteralElement;\n\nfunction isArgumentElement(el) {\n  return el.type === TYPE.argument;\n}\n\nexports.isArgumentElement = isArgumentElement;\n\nfunction isNumberElement(el) {\n  return el.type === TYPE.number;\n}\n\nexports.isNumberElement = isNumberElement;\n\nfunction isDateElement(el) {\n  return el.type === TYPE.date;\n}\n\nexports.isDateElement = isDateElement;\n\nfunction isTimeElement(el) {\n  return el.type === TYPE.time;\n}\n\nexports.isTimeElement = isTimeElement;\n\nfunction isSelectElement(el) {\n  return el.type === TYPE.select;\n}\n\nexports.isSelectElement = isSelectElement;\n\nfunction isPluralElement(el) {\n  return el.type === TYPE.plural;\n}\n\nexports.isPluralElement = isPluralElement;\n\nfunction isPoundElement(el) {\n  return el.type === TYPE.pound;\n}\n\nexports.isPoundElement = isPoundElement;\n\nfunction isTagElement(el) {\n  return el.type === TYPE.tag;\n}\n\nexports.isTagElement = isTagElement;\n\nfunction isNumberSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\n}\n\nexports.isNumberSkeleton = isNumberSkeleton;\n\nfunction isDateTimeSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\n}\n\nexports.isDateTimeSkeleton = isDateTimeSkeleton;\n\nfunction createLiteralElement(value) {\n  return {\n    type: TYPE.literal,\n    value: value\n  };\n}\n\nexports.createLiteralElement = createLiteralElement;\n\nfunction createNumberElement(value, style) {\n  return {\n    type: TYPE.number,\n    value: value,\n    style: style\n  };\n}\n\nexports.createNumberElement = createNumberElement;","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/node_modules/@formatjs/icu-messageformat-parser/types.js"],"names":["Object","defineProperty","exports","value","createNumberElement","createLiteralElement","isDateTimeSkeleton","isNumberSkeleton","isTagElement","isPoundElement","isPluralElement","isSelectElement","isTimeElement","isDateElement","isNumberElement","isArgumentElement","isLiteralElement","SKELETON_TYPE","TYPE","el","type","literal","argument","number","date","time","select","plural","pound","tag","dateTime","style"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNumberElement = exports.createLiteralElement = exports.isDateTimeSkeleton = exports.isNumberSkeleton = exports.isTagElement = exports.isPoundElement = exports.isPluralElement = exports.isSelectElement = exports.isTimeElement = exports.isDateElement = exports.isNumberElement = exports.isArgumentElement = exports.isLiteralElement = exports.SKELETON_TYPE = exports.TYPE = void 0;\nvar TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE = exports.TYPE || (exports.TYPE = {}));\nvar SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE = exports.SKELETON_TYPE || (exports.SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nfunction isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexports.isLiteralElement = isLiteralElement;\nfunction isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexports.isArgumentElement = isArgumentElement;\nfunction isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexports.isNumberElement = isNumberElement;\nfunction isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexports.isDateElement = isDateElement;\nfunction isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexports.isTimeElement = isTimeElement;\nfunction isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexports.isSelectElement = isSelectElement;\nfunction isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexports.isPluralElement = isPluralElement;\nfunction isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexports.isPoundElement = isPoundElement;\nfunction isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexports.isTagElement = isTagElement;\nfunction isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\n}\nexports.isNumberSkeleton = isNumberSkeleton;\nfunction isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\n}\nexports.isDateTimeSkeleton = isDateTimeSkeleton;\nfunction createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexports.createLiteralElement = createLiteralElement;\nfunction createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\nexports.createNumberElement = createNumberElement;\n"]},"metadata":{},"sourceType":"script"}