{"ast":null,"code":"import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\nimport { PRODUCT_ADD, ALL_PRODUCT, SELECTED_PRODUCT, PRODUCT_UPDATE, PROFILE, GET_PROFILE, ALL_SELLERS } from \"../actions\";\nimport { productAddSuccess, productAddError, allProductsSuccess, allProductsError, getSelectedProductSuccess, getSelectedProductError, productUpdateSuccess, productUpdateError, profileAddedSuccess, profileAddedError, getProfileSuccess, getProfileError, allSellerSuccess, allSellerError } from \"./actions\";\nimport { getCurrentUser } from '../../helpers/Utils';\nimport { API_URL } from \"../../apiUrl\";\nexport function* watchAddedProduct() {\n  yield takeEvery(PRODUCT_ADD, AddedProductDetails);\n}\n\nconst AddedProductDetailsAsync = async data => {\n  await axios.post(`${API_URL}/seller/product-add`, data).then(product => {\n    /* console.log(\"added product\", product) */\n    if (product.status === 200) {\n      NotificationManager.success(product.data.message);\n    } else if (product.status === 206) {\n      NotificationManager.warning(product.data.message);\n    }\n  }).catch(error => NotificationManager.warning(error));\n};\n\n_c = AddedProductDetailsAsync;\n\nfunction* AddedProductDetails({\n  payload\n}) {\n  console.log(\"payload\", payload.product);\n  const {\n    name,\n    rate\n  } = payload.product;\n  const user_id = getCurrentUser().id;\n\n  try {\n    const data = {\n      user_id,\n      name,\n      rate\n    };\n    const addedproducts = yield call(AddedProductDetailsAsync, data);\n    /* console.log(\"addedproducts\", addedproducts) */\n\n    yield put(productAddSuccess(addedproducts.data.data));\n  } catch (e) {\n    yield put(productAddError(e));\n    /* console.log(\"e\", e) */\n  }\n}\n\n_c2 = AddedProductDetails;\nexport function* watchAllProducts() {\n  yield takeEvery(ALL_PRODUCT, AllProductsDetails);\n}\n\nfunction* AllProductsDetails({\n  payload\n}) {\n  try {\n    const url = `${API_URL}/seller/product/all/${payload.user_id}`;\n    const products = yield call(() => axios.get(url));\n    /* console.log(products, \"response\"); */\n\n    if (products.status === 200) {\n      yield put(allProductsSuccess(products.data.data));\n    } else if (products.status === 206) {\n      yield put(allProductsError(products.data.message));\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n}\n\n_c3 = AllProductsDetails;\nexport function* watchSelectedProducts() {\n  yield takeEvery(SELECTED_PRODUCT, SelectedProductsDetails);\n}\n\nfunction* SelectedProductsDetails({\n  payload\n}) {\n  try {\n    const url = `${API_URL}/seller/product/${payload.id}`;\n    const product = yield call(() => axios.get(url));\n    /* console.log(product, \"selected product\"); */\n\n    if (product.status === 200) {\n      yield put(getSelectedProductSuccess(product.data.data));\n    } else if (product.status === 206) {\n      yield put(getSelectedProductError(product.data.message));\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n}\n\n_c4 = SelectedProductsDetails;\nexport function* watchProductUpdate() {\n  yield takeEvery(PRODUCT_UPDATE, ProductUpdateDetails);\n}\n\nconst ProductUpdateDetailsAsync = async data => {\n  console.log(\"data update\", data);\n  await axios.put(`${API_URL}/seller/product-update`, data).then(product => {\n    /* console.log(\"product updated\", product) */\n    if (product.status === 200) {\n      NotificationManager.success(product.data.message);\n    } else if (product.status === 206) {\n      NotificationManager.warning(product.data.message);\n    }\n  }).catch(error => NotificationManager.warning(error));\n};\n\n_c5 = ProductUpdateDetailsAsync;\n\nfunction* ProductUpdateDetails({\n  payload\n}) {\n  const {\n    id,\n    user_id,\n    name,\n    rate\n  } = payload.product;\n\n  try {\n    const data = {\n      id,\n      user_id,\n      name,\n      rate\n    };\n    const updatedProduct = yield call(ProductUpdateDetailsAsync, data);\n    /* console.log(\"updated data\", updatedProduct) */\n\n    yield put(productUpdateSuccess(updatedProduct.data.data));\n  } catch (e) {\n    yield put(productUpdateError(e));\n  }\n}\n\n_c6 = ProductUpdateDetails;\nexport function* watchAddedProfile() {\n  yield takeEvery(PROFILE, AddedProfileDetails);\n}\n\nconst AddedProfileDetailsAsync = async data => {\n  await axios.post(`${API_URL}/seller/profile`, data).then(profile => {\n    /*  console.log(\"added profile\", profile) */\n    if (profile.status === 200) {\n      put(profileAddedSuccess(profile.data.data));\n      NotificationManager.success(profile.data.message);\n    } else if (profile.status === 206) {\n      put(profileAddedError(profile.data.message));\n      NotificationManager.warning(profile.data.message);\n    }\n  }).catch(error => NotificationManager.warning(error));\n};\n\n_c7 = AddedProfileDetailsAsync;\n\nfunction* AddedProfileDetails({\n  payload\n}) {\n  console.log(\"payload\", payload.profile);\n  const {\n    description,\n    picture\n  } = payload.profile;\n  const user_id = getCurrentUser().id;\n  const data = {\n    user_id,\n    description,\n    picture\n  };\n  yield call(AddedProfileDetailsAsync, data);\n}\n\n_c8 = AddedProfileDetails;\nexport function* watchSellerProfile() {\n  yield takeEvery(GET_PROFILE, SellerProfileDetails);\n}\n\nfunction* SellerProfileDetails({\n  payload\n}) {\n  try {\n    const url = `${API_URL}/seller/profile/${payload.user_id}`;\n    const profile = yield call(() => axios.get(url));\n    /*  console.log(profile, \"response\"); */\n\n    if (profile.status === 200) {\n      yield put(getProfileSuccess(profile.data.data));\n    } else if (profile.status === 206) {\n      yield put(getProfileError(profile.data.message));\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n}\n\n_c9 = SellerProfileDetails;\nexport function* watchAllSellers() {\n  yield takeEvery(ALL_SELLERS, AllSellersDetails);\n}\n\nfunction* AllSellersDetails({\n  payload\n}) {\n  try {\n    const url = `${API_URL}/buyer/all-sellers`;\n    const seller = yield call(() => axios.get(url));\n    /*  console.log(seller, \"response\"); */\n\n    if (seller.status === 200) {\n      yield put(allSellerSuccess(seller.data.data));\n    } else if (seller.status === 206) {\n      yield put(allSellerError(seller.data.message));\n    }\n  } catch (e) {\n    console.log(\"e\", e);\n  }\n}\n\n_c10 = AllSellersDetails;\nexport default function* rootSaga() {\n  yield all([fork(watchAddedProduct), fork(watchAllProducts), fork(watchSelectedProducts), fork(watchProductUpdate), fork(watchAddedProfile), fork(watchSellerProfile), fork(watchAllSellers)]);\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"AddedProductDetailsAsync\");\n$RefreshReg$(_c2, \"AddedProductDetails\");\n$RefreshReg$(_c3, \"AllProductsDetails\");\n$RefreshReg$(_c4, \"SelectedProductsDetails\");\n$RefreshReg$(_c5, \"ProductUpdateDetailsAsync\");\n$RefreshReg$(_c6, \"ProductUpdateDetails\");\n$RefreshReg$(_c7, \"AddedProfileDetailsAsync\");\n$RefreshReg$(_c8, \"AddedProfileDetails\");\n$RefreshReg$(_c9, \"SellerProfileDetails\");\n$RefreshReg$(_c10, \"AllSellersDetails\");","map":{"version":3,"sources":["/Users/zibranshaikh/Downloads/scaffoldzoid/frontend/src/redux/product/saga.js"],"names":["all","call","fork","put","takeEvery","axios","NotificationManager","PRODUCT_ADD","ALL_PRODUCT","SELECTED_PRODUCT","PRODUCT_UPDATE","PROFILE","GET_PROFILE","ALL_SELLERS","productAddSuccess","productAddError","allProductsSuccess","allProductsError","getSelectedProductSuccess","getSelectedProductError","productUpdateSuccess","productUpdateError","profileAddedSuccess","profileAddedError","getProfileSuccess","getProfileError","allSellerSuccess","allSellerError","getCurrentUser","API_URL","watchAddedProduct","AddedProductDetails","AddedProductDetailsAsync","data","post","then","product","status","success","message","warning","catch","error","payload","console","log","name","rate","user_id","id","addedproducts","e","watchAllProducts","AllProductsDetails","url","products","get","watchSelectedProducts","SelectedProductsDetails","watchProductUpdate","ProductUpdateDetails","ProductUpdateDetailsAsync","updatedProduct","watchAddedProfile","AddedProfileDetails","AddedProfileDetailsAsync","profile","description","picture","watchSellerProfile","SellerProfileDetails","watchAllSellers","AllSellersDetails","seller","rootSaga"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\n\nimport {\n    PRODUCT_ADD,\n    ALL_PRODUCT,\n    SELECTED_PRODUCT,\n    PRODUCT_UPDATE,\n    PROFILE,\n    GET_PROFILE,\n    ALL_SELLERS,\n    \n\n}\nfrom \"../actions\"\n\nimport {\n    productAddSuccess,\n    productAddError,\n    allProductsSuccess,\n    allProductsError,\n    getSelectedProductSuccess,\n    getSelectedProductError,\n    productUpdateSuccess,\n    productUpdateError,\n    profileAddedSuccess,\n    profileAddedError,\n    getProfileSuccess,\n    getProfileError,\n    allSellerSuccess,\n    allSellerError\n}\n    from \"./actions\"\n\nimport { getCurrentUser } from '../../helpers/Utils';\nimport { API_URL } from \"../../apiUrl\"\n\n\nexport function* watchAddedProduct() {\n    yield takeEvery(PRODUCT_ADD, AddedProductDetails);\n}\n\nconst AddedProductDetailsAsync = async (data) => {\n\n    await axios.post(`${API_URL}/seller/product-add`, data)\n\n        .then((product) => {\n            /* console.log(\"added product\", product) */\n            if (product.status === 200) {\n\n                NotificationManager.success(product.data.message);\n\n            } else if (product.status === 206) {\n\n                NotificationManager.warning(product.data.message);\n            }\n        })\n        .catch((error) => NotificationManager.warning(error));\n}\n\n\n\n\n\nfunction* AddedProductDetails({ payload }) {\n    console.log(\"payload\", payload.product)\n    const {\n        name,\n        rate,\n\n    } = payload.product\n\n\n    const user_id = getCurrentUser().id\n\n    try {\n        const data = {\n            user_id, name, rate\n        }\n\n        const addedproducts = yield call(AddedProductDetailsAsync, data);\n\n\n        /* console.log(\"addedproducts\", addedproducts) */\n        yield put(productAddSuccess(addedproducts.data.data));\n    } catch (e) {\n        yield put(productAddError(e))\n        /* console.log(\"e\", e) */\n    }\n\n}\n\nexport function* watchAllProducts() {\n\n    yield takeEvery(ALL_PRODUCT, AllProductsDetails);\n}\n\n\nfunction* AllProductsDetails({ payload }) {\n    try {\n        const url = `${API_URL}/seller/product/all/${payload.user_id}`;\n        const products = yield call(() => axios.get(url))\n\n        /* console.log(products, \"response\"); */\n        if (products.status === 200) {\n\n            yield put(allProductsSuccess(products.data.data))\n\n\n\n        } else if (products.status === 206) {\n            yield put(allProductsError(products.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\n\n\n\n\nexport function* watchSelectedProducts() {\n\n    yield takeEvery(SELECTED_PRODUCT, SelectedProductsDetails);\n}\n\n\nfunction* SelectedProductsDetails({ payload }) {\n\n    try {\n        const url = `${API_URL}/seller/product/${payload.id}`;\n        const product = yield call(() => axios.get(url))\n\n        /* console.log(product, \"selected product\"); */\n        if (product.status === 200) {\n\n            yield put(getSelectedProductSuccess(product.data.data))\n\n\n\n        } else if (product.status === 206) {\n            yield put(getSelectedProductError(product.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\nexport function* watchProductUpdate() {\n    yield takeEvery(PRODUCT_UPDATE, ProductUpdateDetails);\n}\n\nconst ProductUpdateDetailsAsync = async (data) => {\n    console.log(\"data update\", data)\n    await axios.put(`${API_URL}/seller/product-update`, data)\n\n        .then((product) => {\n            /* console.log(\"product updated\", product) */\n            if (product.status === 200) {\n\n                NotificationManager.success(product.data.message);\n\n            } else if (product.status === 206) {\n\n                NotificationManager.warning(product.data.message);\n            }\n        })\n        .catch((error) => NotificationManager.warning(error));\n}\n\n\n\n\n\nfunction* ProductUpdateDetails({ payload }) {\n\n    const {\n        id,\n        user_id,\n        name,\n        rate,\n\n    } = payload.product\n\n    try {\n        const data = {\n            id, user_id, name, rate\n        }\n\n        const updatedProduct = yield call(ProductUpdateDetailsAsync, data);\n\n\n        /* console.log(\"updated data\", updatedProduct) */\n        yield put(productUpdateSuccess(updatedProduct.data.data));\n    } catch (e) {\n        yield put(productUpdateError(e))\n\n    }\n\n}\n\n\nexport function* watchAddedProfile() {\n    yield takeEvery(PROFILE, AddedProfileDetails);\n}\n\nconst AddedProfileDetailsAsync = async (data) => {\n\n    await axios.post(`${API_URL}/seller/profile`, data)\n\n        .then((profile) => {\n           /*  console.log(\"added profile\", profile) */\n            if (profile.status === 200) {\n                put(profileAddedSuccess(profile.data.data));\n                NotificationManager.success(profile.data.message);\n\n            } else if (profile.status === 206) {\n                put(profileAddedError(profile.data.message))\n                NotificationManager.warning(profile.data.message)\n            }\n        })\n        .catch((error) => NotificationManager.warning(error));\n}\n\n\n\n\n\nfunction* AddedProfileDetails({ payload }) {\n    console.log(\"payload\", payload.profile)\n    const {\n        description, picture\n\n    } = payload.profile\n    const user_id = getCurrentUser().id\n    const data = {\n        user_id, description, picture\n    }\n    yield call(AddedProfileDetailsAsync, data);\n\n}\n\n\nexport function* watchSellerProfile() {\n\n    yield takeEvery(GET_PROFILE, SellerProfileDetails);\n}\n\n\nfunction* SellerProfileDetails({ payload }) {\n    try {\n        const url = `${API_URL}/seller/profile/${payload.user_id}`;\n        const profile = yield call(() => axios.get(url))\n\n       /*  console.log(profile, \"response\"); */\n        if (profile.status === 200) {\n\n            yield put(getProfileSuccess(profile.data.data))\n\n\n\n        } else if (profile.status === 206) {\n            yield put(getProfileError(profile.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\n\nexport function* watchAllSellers() {\n\n    yield takeEvery(ALL_SELLERS, AllSellersDetails);\n}\n\n\nfunction* AllSellersDetails({ payload }) {\n    try {\n        const url = `${API_URL}/buyer/all-sellers`;\n        const seller = yield call(() => axios.get(url))\n\n       /*  console.log(seller, \"response\"); */\n        if (seller.status === 200) {\n\n            yield put(allSellerSuccess(seller.data.data))\n\n\n\n        } else if (seller.status === 206) {\n            yield put(allSellerError(seller.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\n\n\n\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        fork(watchAddedProduct),\n        fork(watchAllProducts),\n        fork(watchSelectedProducts),\n        fork(watchProductUpdate),\n        fork(watchAddedProfile),\n        fork(watchSellerProfile),\n        fork(watchAllSellers)\n\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}