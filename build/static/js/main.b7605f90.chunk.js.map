{"version":3,"sources":["helpers/Utils.js","routes/public.js","routes/private.js","redux/auth/actions.js","redux/actions.js","redux/product/actions.js","pages/buyer/buyerNav.js","pages/buyer/buyer.js","pages/seller/profile.js","pages/seller/seller.js","pages/seller/sellerNav.js","pages/seller/products.js","pages/seller/productsAdd.js","pages/seller/productsUpdate.js","pages/buyer/sellerChart.js","pages/authentication/register.js","pages/homepage/homepage.js","pages/authentication/login.js","App.js","redux/auth/reducer.js","redux/product/reducers.js","redux/reducers.js","apiUrl.js","redux/auth/saga.js","redux/product/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["getCurrentUser","user","localStorage","getItem","JSON","parse","error","console","log","setCurrentUser","setItem","stringify","removeItem","PublicRoute","Component","component","restricted","rest","render","props","role","to","PrivateRoute","loginUserSuccess","type","LOGIN_USER_SUCCESS","payload","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserError","message","REGISTER_USER_ERROR","logoutUser","history","LOGOUT_USER","LOGIN_USER","LOGIN_USER_ERROR","REGISTER_USER","PRODUCT_ADD","PRODUCT_ADD_SUCCESS","PRODUCT_ADD_ERROR","ALL_PRODUCT","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_ERROR","SELECTED_PRODUCT","SELECTED_PRODUCT_SUCCESS","SELECTED_PRODUCT_ERROR","PRODUCT_UPDATE","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_ERROR","ALL_SELLERS","ALL_SELLERS_SUCCESS","ALL_SELLERS_ERROR","PROFILE","PROFILE_SUCCESS","PROFILE_ERROR","GET_PROFILE","GET_PROFILE_SUCCESS","GET_PROFILE_ERROR","allProducts","user_id","profileAddedSuccess","profile","getProfileSuccess","connect","logoutUserAction","useState","isOpen","setIsOpen","useHistory","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavbarText","username","Button","push","sellerProduct","allSellerData","loading","allSellerAction","useEffect","data","columns","dataField","text","rows","map","seller","index","id","Profile","width","height","src","picture","alt","name","email","description","ViewProfile","icon","faEye","options","hideSizePerPage","hidePageListOnlyOnePage","sizePerPageList","value","length","Row","Col","lg","Card","CardBody","keyField","pagination","paginationFactory","ReactDOMServer","require","dropzoneComponentConfig","iconFiletypes","postUrl","dropzoneConfig","acceptedFiles","thumbnailHeight","autoProcessQueue","maxFiles","maxFilesize","previewTemplate","renderToStaticMarkup","data-dz-thumbnail","data-dz-name","data-dz-size","data-dz-uploadprogress","data-dz-errormessage","data-dz-remove","headers","addedProfile","profileAddedAction","getProfileAction","getSellerProfile","initialValues","eventHandlers","addedfiles","files","images","i","forEach","img","formData","FormData","append","axios","post","then","res","secure_url","catch","err","SignupSchema","Yup","shape","min","max","required","Container","style","marginTop","xxs","md","validationSchema","onSubmit","values","resetForm","setSubmitting","NotificationManager","warning","window","location","reload","handleSubmit","setFieldValue","setFieldTouched","handleChange","handleBlur","errors","touched","isSubmitting","onValueChange","position","bottom","FormGroup","Label","disabled","config","djsConfig","Seller","NavItem","NavLink","children","allProduct","allProductsAction","getProductData","product","rate","edit","faEdit","xs","size","productAddAction","CardTitle","selectedProduct","getSelectedProductAction","productUpdateAction","useParams","enableReinitialize","authUser","currentUser","registerUserAction","validatePassword","validateConfirmPassword","validateEmail","test","password","confirm_password","validate","autoComplete","Homepage","background","backgroundImage","backgroundSize","fontWeight","loginUserAction","App","path","exact","Register","Login","Buyer","SellerChart","Product","ProductAdd","productsUpdate","INIT_STATE","products","state","action","reducers","combineReducers","API_URL","watchLoginUser","loginWithEmailPassword","watchRegisterUser","registerWithEmailPassword","watchLogoutUser","logout","rootSaga","takeEvery","loginWithEmailPasswordAsync","a","status","put","success","call","registerWithEmailPasswordAsync","all","fork","watchAddedProduct","AddedProductDetails","watchAllProducts","AllProductsDetails","watchSelectedProducts","SelectedProductsDetails","watchProductUpdate","ProductUpdateDetails","watchAddedProfile","AddedProfileDetails","watchSellerProfile","SellerProfileDetails","watchAllSellers","AllSellersDetails","AddedProductDetailsAsync","addedproducts","url","get","ProductUpdateDetailsAsync","updatedProduct","AddedProfileDetailsAsync","allSellers","authSagas","productSagas","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","compose","applyMiddleware","run","sagas","ReactDOM","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.b7605f90.chunk.js","sourcesContent":["export const getCurrentUser = () => {\n  let user = null;\n  try {\n    user =\n      localStorage.getItem('authUser') != null\n        ? JSON.parse(localStorage.getItem('authUser'))\n        : null;\n  } catch (error) {\n    console.log('>>>> getCurrentUser -> error', error);\n    user = null;\n  }\n  return user;\n};\n\nexport const setCurrentUser = (user) => {\n  try {\n    if (user) {\n      localStorage.setItem('authUser', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('authUser');\n    }\n  } catch (error) {\n    console.log('>>>> setCurrentUser -> error', error);\n  }\n};\n","\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getCurrentUser } from \"../helpers/Utils\";\n\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n\n        <Route {...rest} render={props => (\n\n            (getCurrentUser() && restricted ?\n                getCurrentUser().role===\"buyer\" ? <Redirect to=\"/buyer\" />:<Redirect to=\"/seller\" />\n                : <Component {...props} />)\n           \n\n\n\n        )} />\n    );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getCurrentUser } from \"../helpers/Utils\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /login page\n        <Route {...rest} render={props => (\n            getCurrentUser() ?\n                <Component {...props} />\n            : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","// eslint-disable-next-line import/no-cycle\nimport {\n  LOGIN_USER,\n  LOGIN_USER_SUCCESS,\n  LOGOUT_USER,\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  REGISTER_USER_ERROR,\n  \n} from '../actions';\n\nexport const loginUser = (user, history) => ({\n  type: LOGIN_USER,\n  payload: { user, history },\n});\nexport const loginUserSuccess = (user) => ({\n  type: LOGIN_USER_SUCCESS,\n  payload: user,\n});\nexport const loginUserError = (message) => ({\n  type: LOGIN_USER_ERROR,\n  payload: { message },\n});\n\n\nexport const registerUser = (user, history) => ({\n  type: REGISTER_USER,\n  payload: { user, history },\n\n});\nexport const registerUserSuccess = (user) => ({\n  type: REGISTER_USER_SUCCESS,\n  payload: user,\n});\nexport const registerUserError = (message) => ({\n  type: REGISTER_USER_ERROR,\n  payload: { message },\n \n});\n\nexport const logoutUser = (history) => ({\n  type: LOGOUT_USER,\n  payload: { history },\n});\n","\n\n/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_ERROR = 'LOGIN_USER_ERROR';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_ERROR = 'REGISTER_USER_ERROR';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\n\n/* PRODUCT */\nexport const PRODUCT_ADD = 'PRODUCT_ADD';\nexport const PRODUCT_ADD_SUCCESS = 'PRODUCT_ADD_SUCCESS';\nexport const PRODUCT_ADD_ERROR = 'PRODUCT_ADD_ERROR';\nexport const ALL_PRODUCT = 'ALL_PRODUCT';\nexport const ALL_PRODUCT_SUCCESS = 'ALL_PRODUCT_SUCCESS';\nexport const ALL_PRODUCT_ERROR = 'ALL_PRODUCT_ERROR';\nexport const SELECTED_PRODUCT = 'SELECTED_PRODUCT';\nexport const  SELECTED_PRODUCT_SUCCESS = ' SELECTED_PRODUCT_SUCCESS';\nexport const  SELECTED_PRODUCT_ERROR = ' SELECTED_PRODUCT_ERROR';\nexport const PRODUCT_UPDATE = 'PRODUCT_UPDATE';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_ERROR = 'PRODUCT_UPDATE_ERROR';\nexport const ALL_SELLERS = 'ALL_SELLERS';\nexport const ALL_SELLERS_SUCCESS = 'ALL_SELLERS_SUCCESS';\nexport const ALL_SELLERS_ERROR = 'ALL_SELLERS_ERROR';\n\n\n/* PROFILE */\nexport const PROFILE = 'PROFILE';\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_ERROR = 'GET_PROFILE_ERROR';\n\n\n\n\n\n\n\nexport * from './auth/actions';\n\n","import {\n    PRODUCT_ADD,\n    PRODUCT_ADD_SUCCESS,\n    PRODUCT_ADD_ERROR,\n    ALL_PRODUCT,\n    ALL_PRODUCT_SUCCESS,\n    ALL_PRODUCT_ERROR,\n    SELECTED_PRODUCT,\n    SELECTED_PRODUCT_SUCCESS,\n    SELECTED_PRODUCT_ERROR,\n    PRODUCT_UPDATE,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_ERROR,\n    PROFILE,\n    PROFILE_SUCCESS,\n    PROFILE_ERROR,\n    GET_PROFILE,\n    GET_PROFILE_SUCCESS,\n    GET_PROFILE_ERROR,\n    ALL_SELLERS,\n    ALL_SELLERS_SUCCESS,\n    ALL_SELLERS_ERROR\n\n}\nfrom \"../actions\"\n\n/* product add */\nexport const productAdd = (product, history) => ({\n    type: PRODUCT_ADD,\n    payload: { product, history },\n});\nexport const productAddSuccess = (product) => ({\n    type: PRODUCT_ADD_SUCCESS,\n    payload: product,\n});\nexport const productAddError = (error) => ({\n    type: PRODUCT_ADD_ERROR,\n    error\n});\n\n/* All products */\nexport const allProducts = (user_id, history) => ({\n    type: ALL_PRODUCT,\n    payload: { user_id, history },\n});\nexport const allProductsSuccess = (allProduct) => ({\n    type: ALL_PRODUCT_SUCCESS,\n    payload: allProduct,\n});\nexport const allProductsError = (error) => ({\n    type: ALL_PRODUCT_ERROR,\n    error\n});\n\n/* Selected Product from table to edit */\nexport const getSelectedProduct = (id, history) => ({\n    type: SELECTED_PRODUCT,\n    payload: { id, history },\n});\nexport const getSelectedProductSuccess = (selectedProduct) => ({\n    type: SELECTED_PRODUCT_SUCCESS,\n    payload: selectedProduct,\n});\nexport const getSelectedProductError = (error) => ({\n    type: SELECTED_PRODUCT_ERROR,\n    payload: {},\n    error\n});\n\n/* product updated */\nexport const productUpdate = (product, history) => ({\n    type: PRODUCT_UPDATE,\n    payload: { product, history },\n});\nexport const productUpdateSuccess = (product) => ({\n    type: PRODUCT_UPDATE_SUCCESS,\n    payload: product,\n});\nexport const productUpdateError = (error) => ({\n    type: PRODUCT_UPDATE_ERROR,\n    error\n});\n\n/* Profile added */\nexport const profileAdded = (profile, history) => ({\n    type: PROFILE,\n    payload: { profile, history },\n});\nexport const profileAddedSuccess = (profile) => ({\n    type: PROFILE_SUCCESS,\n    payload: profile,\n});\nexport const profileAddedError = (error) => ({\n    type: PROFILE_ERROR,\n    error\n});\n\n/* Get Profile data */\nexport const getProfile = (user_id, history) => ({\n    type: GET_PROFILE,\n    payload: { user_id, history },\n});\nexport const getProfileSuccess = (profile) => ({\n    type: GET_PROFILE_SUCCESS,\n    payload: profile,\n});\nexport const getProfileError = (error) => ({\n    type: GET_PROFILE_ERROR,\n    error\n});\n\n/* Get all Seller data */\n\nexport const allSeller = (history) => ({\n    type: ALL_SELLERS,\n    payload: { history },\n});\nexport const allSellerSuccess = (allSellers) => ({\n    type: ALL_SELLERS_SUCCESS,\n    payload: allSellers,\n});\nexport const allSellerError = (error) => ({\n    type: ALL_SELLERS_ERROR,\n    error\n});","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport {useHistory} from 'react-router-dom'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavbarText,\n    Button\n} from 'reactstrap';\nimport { logoutUser } from \"../../redux/actions\";\nimport {getCurrentUser, setCurrentUser} from \"../../helpers/Utils\"\n\nconst BuyerNavbar = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    const history = useHistory()\n\n\n    const handleLogout = () => {\n       /* logoutUserAction(history) */\n       setCurrentUser();\n       history.push('/')\n    };\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/buyer\">Scaffoldzoid</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                       {/*  <NavItem>\n                            <NavLink href=\"/seller/profile\">Add Profile</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"/seller/product\">Add Product</NavLink>\n                        </NavItem> */}\n\n                    </Nav>\n                    <NavbarText className=\"mr-3\">{getCurrentUser()? `Hello, ${getCurrentUser().username}`:\"\"}</NavbarText>\n                    <Button className=\"btn-danger\" onClick={() => handleLogout()}>Logout</Button>\n                </Collapse>\n            </Navbar>\n          {/*   <div>{props.children}</div>  */}\n        </div>\n    );\n}\n\n\n\n\nexport default connect(null, { logoutUserAction: logoutUser })(BuyerNavbar);","import React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye} from '@fortawesome/free-solid-svg-icons'\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody\n\n} from 'reactstrap'\nimport { allSeller } from \"../../redux/product/actions\"\nimport BuyerNavbar from \"./buyerNav\"\n\n\n\n\n\n\nconst Buyer = ({ history, allSellerAction, allSellerData}) => {\n\n    \n    const SellerData = ()=>{\n        allSellerAction(history)\n    }\n\n\n    useEffect(() => {\n        SellerData()\n       }, [])\n\n    const data = {\n        columns: [\n            {\n                dataField: 'id',\n                text: 'No.'\n            },\n            {\n                dataField: \"Profile\",\n                text: \"Profile\"\n            },\n            {\n                dataField: \"name\",\n                text: \"Username\"\n            },\n            {\n                dataField: \"email\",\n                text: \"Email\"\n            },\n            {\n                dataField: \"description\",\n                text: \"Description\"\n            },\n            {\n                dataField: \"ViewProfile\",\n                text: \"Action\"\n            },\n\n\n        ],\n        rows: allSellerData.map((seller,index)=>(\n            {\n\n                id: index + 1,\n                Profile:<img width=\"100\" height=\"100\" className=\"rounded-circle\" src={seller.picture} alt=\"seller profile picture\"/>,\n                name: seller.username,\n                email: seller.email,\n                description:seller.description,\n                ViewProfile: <NavLink to={`buyer/seller-profile/${seller.id}`}><FontAwesomeIcon icon={faEye} ></FontAwesomeIcon></NavLink>\n\n\n            }\n\n        )),\n    }\n\n\n\n    const options = {\n        // pageStartIndex: 0,\n        hideSizePerPage: false,\n        hidePageListOnlyOnePage: false,\n        sizePerPageList:\n            [{\n                text: '5th', value: 5\n            }, {\n                text: '10th', value: 10\n            }, {\n                text: 'All', value: data.rows.length\n            }]\n\n    };\n\n\n    return (\n        <>\n        <BuyerNavbar/>\n           \n           {allSellerData && allSellerData.length > 0?\n            <Row>\n\n                <Col lg={9} className='mt-5 mx-auto'>\n                    <Card>\n                        <CardBody>\n\n\n                            <h4 className=\"card-title mb-4\">All Sellers</h4>\n\n                            <BootstrapTable\n                                keyField='id'\n                                data={data.rows}\n                                columns={data.columns}\n                                pagination={paginationFactory(options)}\n\n                            />\n                        </CardBody>\n                    </Card>\n                </Col>\n\n            </Row>\n            :\"\"}\n           \n        </>\n    );\n}\n\n\nconst mapStateToProps = ({ sellerProduct }) => {\n    const {  allSellerData, loading } = sellerProduct;\n    console.log(\"allSellerData\", allSellerData)\n\n    return { allSellerData, loading };\n\n\n};\n\n\nexport default connect(mapStateToProps, { allSellerAction: allSeller })(Buyer)\n\n","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\n\nimport DropzoneComponent from 'react-dropzone-component';\n\nimport axios from 'axios';\n\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\n\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    FormGroup,\n    Label,\n    Button,\n\n} from 'reactstrap';\n\nimport { getCurrentUser } from '../../helpers/Utils';\nimport { NotificationManager } from 'react-notifications';\nimport { profileAdded, getProfile } from \"../../redux/product/actions\"\n\n\n\n\n\nconst ReactDOMServer = require('react-dom/server');\n\nconst dropzoneComponentConfig = {\n    iconFiletypes: ['.jpg', '.png', '.gif'],\n    postUrl: 'https://httpbin.org/post',\n};\nconst dropzoneConfig = {\n    acceptedFiles: \"image/jpeg,image/png,image/gif\",\n    thumbnailHeight: 160,\n    autoProcessQueue: true,\n    maxFiles: 1,\n    maxFilesize: 2,\n    previewTemplate: ReactDOMServer.renderToStaticMarkup(\n        <div className=\"dz-preview dz-file-preview mb-3\">\n            <div className=\"d-flex flex-row \">\n                <div className=\"p-0 w-30 position-relative\">\n                    <div className=\"dz-error-mark\">\n                        <span>\n                            <i />{' '}\n                        </span>\n                    </div>\n                    <div className=\"dz-success-mark\">\n                        <span>\n                            <i />\n                        </span>\n                    </div>\n                    <div className=\"preview-container\">\n                        {/*  eslint-disable-next-line jsx-a11y/alt-text */}\n                        <img data-dz-thumbnail className=\"img-thumbnail border-0\" />\n                        <i className=\"simple-icon-doc preview-icon\" />\n                    </div>\n                </div>\n                <div className=\"pl-3 pt-2 pr-2 pb-1 w-70 dz-details position-relative\">\n                    <div>\n                        {' '}\n                        <span data-dz-name />{' '}\n                    </div>\n                    <div className=\"text-primary text-extra-small\" data-dz-size />\n                    <div className=\"dz-progress\">\n                        <span className=\"dz-upload\" data-dz-uploadprogress />\n                    </div>\n                    <div className=\"dz-error-message\">\n                        <span data-dz-errormessage />\n                    </div>\n                </div>\n            </div>\n            <a href=\"#/\" className=\"remove\" data-dz-remove>\n                {' '}\n                <i className=\"glyph-icon simple-icon-trash\" />{' '}\n            </a>\n        </div>\n    ),\n    headers: { 'My-Awesome-Header': 'header value' },\n};\n\n\n\nconst Profile = ({ profileAddedAction, getProfileAction, addedProfile, history }) => {\n\n    const getSellerProfile = () => {\n        const user_id = getCurrentUser().id\n        getProfileAction(user_id, history)\n    }\n\n    useEffect(() => {\n        getSellerProfile()\n    }, [])\n\n   \n\n\n    const initialValues = {\n        username: getCurrentUser().username,\n        email: getCurrentUser().email,\n        description: \"\",\n        picture: [],\n\n\n    }\n\n\n\n    const onSubmit = (values, { resetForm, setSubmitting }) => {\n\n\n        if (values.picture.length === 0) {\n            NotificationManager.warning(\"Please enter your profile picture\");\n        } else {\n\n           /*  setTimeout(() => {\n                alert(JSON.stringify(payload, null, 2));\n                resetForm()\n                setSubmitting(false);\n            }, 1000); */\n            profileAddedAction(values, history)\n            resetForm()\n            setSubmitting(false);\n            window.location.reload();\n\n        }\n\n\n    };\n\n\n\n\n    const eventHandlers = {\n\n        addedfiles: (files) => {\n            let images = []\n\n            for (let i = 0; i < files.length; i++) {\n                images.push(files[i])\n\n                /* console.log(\"images\", files[i]) */\n            }\n\n            images.forEach((img) => {\n                const formData = new FormData()\n                formData.append(`file`, img)\n                formData.append('upload_preset', 'lyxrkznz');\n\n                return axios.post(\"https://api.cloudinary.com/v1_1/dx6zgsncl/upload\", formData)\n                    .then(res => {\n                        initialValues.picture.push(res.data.secure_url)\n\n\n                    })\n                    .catch(err => console.log(err))\n\n            })\n\n\n\n        }\n\n\n    }\n\n\n    const SignupSchema = Yup.object().shape({\n        description: Yup.string()\n            .min(10, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Please enter profile description'),\n\n\n    });\n\n\n\n    return (\n\n\n        <>\n            <Container >\n                <Row className=\"mb-4 d-flex justify-content-center align-items-center\" style={{ marginTop: \"200px\" }}>\n                    <Col xxs=\"12\" md=\"6\">\n                        <Card>\n                            <CardBody>\n\n\n                                <Formik\n                                    initialValues={initialValues}\n                                    /* enableReinitialize={true} */\n                                    validationSchema={SignupSchema}\n                                    onSubmit={onSubmit}\n\n                                >\n                                    {({\n                                        handleSubmit,\n                                        setFieldValue,\n                                        setFieldTouched,\n                                        handleChange,\n                                        handleBlur,\n                                        values,\n                                        errors,\n                                        touched,\n                                        isSubmitting,\n                                        onValueChange,\n\n\n                                    }) => (\n\n                                        <Form className=\"av-tooltip tooltip-label-bottom\">\n                                            <Row>\n                                                <Col xxs=\"12\" className=\"d-flex justify-content-center\">\n                                                    <img className=\"rounded-circle\" src={addedProfile ? addedProfile.picture:\"https://res.cloudinary.com/uploadfiles/image/upload/v1617046740/istockphoto-185284489-612x612_fboind.jpg\"} width=\"200\" height=\"200\" alt=\"profile picture\" style={{ position: \"absolute\", bottom: \"-20px\" }} />\n                                                </Col>\n\n                                            </Row>\n\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n                                                        <Label>\n                                                        <span>Name</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"username\" value={values.username} disabled={true} />\n\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n                                                        <Label>\n                                                        <span>Email</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"email\" value={values.email} disabled={true} />\n\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n                                                        <Label>\n                                                        <span>Description</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"description\" component=\"textarea\" value={addedProfile ? addedProfile.description:values.description} ></Field>\n\n                                                        {errors.description && touched.description ? (\n                                                            <div className=\"invalid-feedback d-block\">\n                                                                {errors.description}\n                                                            </div>\n                                                        ) : null}\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <DropzoneComponent\n                                                        name=\"picture\"\n                                                        config={dropzoneComponentConfig}\n                                                        djsConfig={dropzoneConfig}\n                                                        eventHandlers={eventHandlers}\n                                                        value={values.picture}\n                                                    />\n\n                                                </Col>\n                                            </Row>\n\n                                            <Button color=\"primary\" type=\"submit\" className=\"mt-3\" >\n                                                {isSubmitting ? \"Submit\" : \"Submit\"}\n                                            </Button>\n                                        </Form>\n                                    )}\n                                </Formik>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n\n                </Row>\n            </Container>\n\n\n        </>\n    );\n}\n\nconst mapStateToProps = ({ sellerProduct }) => {\n    const { addedProfile, loading } = sellerProduct;\n\n\n    /* console.log(\"added profile ====>\", addedProfile) */\n    return { addedProfile, loading };\n\n\n};\n\nexport default connect(mapStateToProps, { profileAddedAction: profileAdded, getProfileAction: getProfile })(Profile)\n\n","import React from 'react';\nimport Profile from './profile';\n\n\n\nconst Seller = () => {\n    return (\n        <>\n            \n            <Profile />\n\n        </>\n    )\n\n}\n\nexport default Seller;","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport {useHistory} from 'react-router-dom'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarText,\n    Button\n} from 'reactstrap';\nimport { logoutUser } from \"../../redux/actions\";\nimport {getCurrentUser, setCurrentUser} from \"../../helpers/Utils\"\n\nconst SellerNavbar = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    const history = useHistory()\n\n\n    const handleLogout = () => {\n       \n       setCurrentUser();\n       history.push('/')\n    };\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/seller\">Scaffoldzoid</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"/seller/profile\">Add Profile</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"/seller/product\">Add Product</NavLink>\n                        </NavItem>\n\n                    </Nav>\n                    <NavbarText className=\"mr-3\">{getCurrentUser()? `Hello, ${getCurrentUser().username}`:\"\"}</NavbarText>\n                    <Button className=\"btn-danger\" onClick={() => handleLogout()}>Logout</Button>\n                </Collapse>\n            </Navbar>\n            <div>{props.children}</div> \n        </div>\n    );\n}\n\n\n\n\nexport default connect(null, { logoutUserAction: logoutUser })(SellerNavbar);","import React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit} from '@fortawesome/free-solid-svg-icons'\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody,\n\n    Button\n\n} from 'reactstrap'\nimport { allProducts } from \"../../redux/product/actions\"\nimport { getCurrentUser } from \"../../helpers/Utils\";\n\n\n\n\n\nconst Product = ({ history, allProductsAction, allProduct }) => {\n\n    const getProductData = () => {\n        const user_id = getCurrentUser().id\n        allProductsAction(user_id, history)\n\n    }\n\n\n    useEffect(() => {\n        getProductData()\n    }, [])\n\n    const data = {\n        columns: [\n            {\n                dataField: 'id',\n                text: 'No.'\n            },\n            {\n                dataField: \"name\",\n                text: \"Type\"\n            },\n            {\n                dataField: \"rate\",\n                text: \"Rate (Rupees/kg)\"\n            },\n            {\n                dataField: \"edit\",\n                text: \"Action\"\n            },\n\n\n        ],\n        rows: allProduct.map(product=>(\n            {\n\n                id: product.id,\n                name: product.name,\n                rate: product.rate,\n                edit: <NavLink to={`product/edit/${product.id}`}><FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon></NavLink>\n\n\n            }\n\n        )),\n    }\n\n\n\n    const options = {\n        // pageStartIndex: 0,\n        hideSizePerPage: false,\n        hidePageListOnlyOnePage: false,\n        sizePerPageList:\n            [{\n                text: '5th', value: 5\n            }, {\n                text: '10th', value: 10\n            }, {\n                text: 'All', value: data.rows.length\n            }]\n\n    };\n\n\n    return (\n        <>\n            <Row className=\"mt-5\">\n                <Col xs=\"4\">\n\n                    <Button size=\"md\" className=\"offset-md-1\" onClick={() => history.push('/seller/product/add')}>Add New Product<sup> +</sup></Button>\n\n                </Col>\n            </Row>\n           {allProduct && allProduct.length > 0?\n            <Row>\n\n                <Col lg={9} className='mt-5 mx-auto'>\n                    <Card>\n                        <CardBody>\n\n\n                            <h4 className=\"card-title mb-4\">All Products</h4>\n\n                            <BootstrapTable\n                                keyField='id'\n                                data={data.rows}\n                                columns={data.columns}\n                                pagination={paginationFactory(options)}\n\n                            />\n                        </CardBody>\n                    </Card>\n                </Col>\n\n            </Row>\n            :\"\"}\n        </>\n    );\n}\n\n\nconst mapStateToProps = ({ sellerProduct }) => {\n    const { allProduct, loading } = sellerProduct;\n   /*  console.log(\"data\", allProduct) */\n\n    return { allProduct, loading };\n\n\n};\n\n\nexport default connect(mapStateToProps, { allProductsAction: allProducts })(Product)\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport * as Yup from 'yup';\nimport { Formik, Form, Field} from 'formik';\n\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    FormGroup,\n    Label,\n    Button,\n    CardTitle,\n} from 'reactstrap';\nimport { productAdd } from \"../../redux/product/actions\"\n\n\n\n\nconst ProductAdd = ({ productAddAction, history }) => {\n\n\n    const initialValues = {\n        name: \"\",\n        rate: \"\",\n    }\n\n\n\n    const onSubmit = (values, { resetForm, setSubmitting }) => {\n\n        productAddAction(values, history)\n        resetForm()\n        setSubmitting(false);\n\n    };\n\n    const SignupSchema = Yup.object().shape({\n        name: Yup.string()\n            .min(2, 'Too Short!')\n            .max(5000, 'Too Long!')\n            .required('Please enter Orange Name / Type'),\n        rate: Yup.string()\n            .min(1, 'Very Less Price!')\n            .max(50, 'Too Long!')\n            .required('Please enter Price for Orange'),\n\n    });\n\n\n\n    return (\n\n\n        <>\n            <Container >\n                <Row className=\"mb-4 d-flex justify-content-center align-items-center\" style={{ height: \"75vh\" }}>\n                    <Col xxs=\"12\" md=\"6\">\n                        <Card>\n                            <CardBody>\n                                <CardTitle>\n                                    <span>Orange Details</span>\n                                </CardTitle>\n\n                                <Formik\n                                    initialValues={initialValues}\n\n                                    validationSchema={SignupSchema}\n                                    onSubmit={onSubmit}\n\n                                >\n                                    {({\n                                        handleSubmit,\n                                        setFieldValue,\n                                        setFieldTouched,\n                                        handleChange,\n                                        handleBlur,\n                                        values,\n                                        errors,\n                                        touched,\n                                        isSubmitting,\n                                        onValueChange,\n\n\n                                    }) => (\n\n                                        <Form className=\"av-tooltip tooltip-label-bottom\">\n\n\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n\n\n                                                        <Label>\n                                                            <span>Name / Type</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"name\" value={values.name} />\n\n                                                        {errors.name && touched.name ? (\n                                                            <div className=\"invalid-feedback d-block\">\n                                                                {errors.name}\n                                                            </div>\n                                                        ) : null}\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n\n\n                                                        <Label>\n                                                            <span>Rate (Rupees/Kg)</span>\n\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"rate\" type=\"number\" value={values.rate} />\n                                                        {errors.rate && touched.rate ? (\n                                                            <div className=\"invalid-feedback d-block\">\n                                                                {errors.rate}\n                                                            </div>\n                                                        ) : null}\n\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n\n                                            <Button color=\"primary\" type=\"submit\" className=\"mt-3\" >\n                                                {isSubmitting ? \"loading\" : \"Add Product\"}\n                                            </Button>\n                                        </Form>\n                                    )}\n                                </Formik>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n\n                </Row>\n            </Container>\n\n\n        </>\n    );\n}\n\n\n\nexport default connect(null, { productAddAction: productAdd })(ProductAdd)\n\n","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\"\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\n\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    FormGroup,\n    Label,\n    Button,\n    CardTitle,\n} from 'reactstrap';\nimport { getSelectedProduct, productUpdate } from \"../../redux/product/actions\"\n\n\n\n\nconst ProductEdit = ({ getSelectedProductAction, selectedProduct, productUpdateAction, history }) => {\n\n    const { id } = useParams()\n    console.log(\"id for update\", id)\n\n    const getSelectedProduct = () => {\n        getSelectedProductAction(id, history)\n\n    }\n    useEffect(() => {\n        getSelectedProduct()\n    }, [])\n\n\n    const initialValues = {\n        id: selectedProduct.id,\n        user_id: selectedProduct.user_id,\n        name: selectedProduct.name,\n        rate: selectedProduct.rate,\n    }\n\n\n\n    const onSubmit = (values, { resetForm, setSubmitting }) => {\n\n        productUpdateAction(values, history)\n        resetForm()\n        setSubmitting(false);\n\n    };\n\n    const SignupSchema = Yup.object().shape({\n        name: Yup.string()\n            .min(2, 'Too Short!')\n            .max(5000, 'Too Long!')\n            .required('Please enter Orange Name / Type'),\n        rate: Yup.string()\n            .min(1, 'Very Less Price!')\n            .max(50, 'Too Long!')\n            .required('Please enter Price for Orange'),\n\n    });\n\n\n\n    return (\n\n\n        <>\n            <Container >\n                <Row className=\"mb-4 d-flex justify-content-center align-items-center\" style={{ height: \"75vh\" }}>\n                    <Col xxs=\"12\" md=\"6\">\n                        <Card>\n                            <CardBody>\n                                <CardTitle>\n                                    <span>Update Orange Details</span>\n\n                                </CardTitle>\n\n                                <Formik\n                                    initialValues={initialValues}\n                                    enableReinitialize={true}\n                                    validationSchema={SignupSchema}\n                                    onSubmit={onSubmit}\n\n                                >\n                                    {({\n                                        handleSubmit,\n                                        setFieldValue,\n                                        setFieldTouched,\n                                        handleChange,\n                                        handleBlur,\n                                        values,\n                                        errors,\n                                        touched,\n                                        isSubmitting,\n                                        onValueChange,\n\n\n                                    }) => (\n\n                                        <Form className=\"av-tooltip tooltip-label-bottom\">\n\n\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n\n\n                                                        <Label>\n                                                        <span>Name / Type</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"name\" value={values.name} />\n\n                                                        {errors.name && touched.name ? (\n                                                            <div className=\"invalid-feedback d-block\">\n                                                                {errors.name}\n                                                            </div>\n                                                        ) : null}\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n                                            <Row>\n                                                <Col xxs=\"12\">\n                                                    <FormGroup className=\"form-group has-float-label\">\n\n\n                                                        <Label>\n                                                        <span>Rate (Rupees/Kg)</span>\n                                                        </Label>\n                                                        <Field className=\"form-control\" name=\"rate\" type=\"number\" value={values.rate} />\n                                                        {errors.rate && touched.rate ? (\n                                                            <div className=\"invalid-feedback d-block\">\n                                                                {errors.rate}\n                                                            </div>\n                                                        ) : null}\n\n\n                                                    </FormGroup>\n                                                </Col>\n\n                                            </Row>\n\n\n                                            <Button color=\"primary\" type=\"submit\" className=\"mt-3\" >\n                                                {isSubmitting ? \"loading\" : \"Update Product\"}\n                                            </Button>\n                                        </Form>\n                                    )}\n                                </Formik>\n                            </CardBody>\n                        </Card>\n                    </Col>\n\n\n                </Row>\n            </Container>\n\n\n        </>\n    );\n}\n\nconst mapStateToProps = ({ sellerProduct }) => {\n    const { selectedProduct, loading } = sellerProduct;\n    console.log(\"selectedProduct\", selectedProduct)\n\n    return { selectedProduct, loading };\n\n\n};\n\n\nexport default connect(mapStateToProps, { getSelectedProductAction: getSelectedProduct, productUpdateAction: productUpdate })(ProductEdit)\n\n","import React, { useEffect } from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\n\nimport {\n    Row,\n    Col,\n    Card,\n    CardBody\n\n} from 'reactstrap'\nimport { allProducts } from \"../../redux/product/actions\"\nimport BuyerNavbar from \"./buyerNav\"\n\n\n\n\n\n\nconst SellerChart = ({ history, allProductsAction, allProduct }) => {\n\n\n    const {user_id} = useParams()\n\n    const getProductData = () => {\n        allProductsAction(user_id, history)\n\n    }\n\n\n    useEffect(() => {\n        getProductData()\n    }, [])\n\n    const data = {\n        columns: [\n            {\n                dataField: 'id',\n                text: 'No.'\n            },\n            {\n                dataField: \"name\",\n                text: \"Type\"\n            },\n            {\n                dataField: \"rate\",\n                text: \"Rate (Rupees/kg)\"\n            },\n           /*  {\n                dataField: \"edit\",\n                text: \"Action\"\n            }, */\n\n\n        ],\n        rows: allProduct.map(product=>(\n            {\n\n                id: product.id,\n                name: product.name,\n                rate: product.rate,\n               /*  edit: <NavLink to={`product/edit/${product.id}`}><FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon></NavLink> */\n\n\n            }\n\n        )),\n    }\n\n\n\n    const options = {\n        // pageStartIndex: 0,\n        hideSizePerPage: false,\n        hidePageListOnlyOnePage: false,\n        sizePerPageList:\n            [{\n                text: '5th', value: 5\n            }, {\n                text: '10th', value: 10\n            }, {\n                text: 'All', value: data.rows.length\n            }]\n\n    };\n\n\n    return (\n        <>\n             <BuyerNavbar/>\n           {allProduct && allProduct.length > 0?\n            <Row>\n\n                <Col lg={9} className='mt-5 mx-auto'>\n                    <Card>\n                        <CardBody>\n\n\n                            <h4 className=\"card-title mb-4\">All Products</h4>\n\n                            <BootstrapTable\n                                keyField='id'\n                                data={data.rows}\n                                columns={data.columns}\n                                pagination={paginationFactory(options)}\n\n                            />\n                        </CardBody>\n                    </Card>\n                </Col>\n\n            </Row>\n            :\"\"}\n        </>\n    );\n}\n\n\nconst mapStateToProps = ({ sellerProduct }) => {\n    const { allProduct, loading } = sellerProduct;\n   /*  console.log(\"data\", allProduct) */\n\n    return { allProduct, loading };\n\n\n};\n\n\nexport default connect(mapStateToProps, { allProductsAction: allProducts })(SellerChart)\n\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\n\nimport {\n    Row,\n    Card,\n    CardTitle,\n    FormGroup,\n    Label,\n    Col,\n    Button,\n} from 'reactstrap';\nimport { NavLink , useParams} from 'react-router-dom';\nimport \"./authorization.scss\"\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../redux/actions';\nimport { NotificationManager } from 'react-notifications';\n\n\n\nconst Register = ({ history, registerUserAction }) => {\n\n\n    const validatePassword = (value) => {\n        let error;\n        if (!value) {\n            error = 'Please enter your password';\n        } else if (value.length < 4) {\n            error = 'Value must be longer than 3 characters';\n        }\n        return error;\n    };\n    const validateConfirmPassword = (value) => {\n        let error;\n        if (!value) {\n            error = 'Please enter your password';\n        } else if (value.length < 4) {\n            error = 'Value must be longer than 3 characters';\n        }\n        return error;\n    };\n\n    const validateEmail = (value) => {\n        let error;\n        if (!value) {\n            error = 'Please enter your email address';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n            error = 'Invalid email address';\n        }\n        return error;\n    };\n\n    const username = (value) => {\n        let error;\n        if (!value) {\n            error = 'Please enter your username';\n        } else if (value.length < 2) {\n            error = 'Value must be longer than 2 characters';\n        }\n        return error;\n    };\n\n\n    const onUserRegister = (values, { resetForm, setSubmitting }) => {\n        if (values.password !== values.confirm_password) {\n            NotificationManager.warning(\"Passwords do not match! please Enter again\")\n\n        }else{\n            registerUserAction(values, history)\n            resetForm()\n            setSubmitting(false);\n        }\n\n    };\n\n    const {role} = useParams();\n    console.log(\"roles\", role)\n    const initialValues = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        role: role\n    };\n    return (\n        <Row className=\"h-100\" style={{marginTop:\"50px\"}}>\n            <Col xxs=\"12\" md=\"6\" className=\"mx-auto my-auto\">\n                <Card className=\"auth-card\">\n                    <div className=\"position-relative image-side \">\n                        <p className=\"text-white h2\">Scaffoldzoid</p>\n                        <p className=\"white mb-0\">\n                            Please use this form to register. <br />\n              If you are a member, please{' '}\n                            <NavLink to=\"/login\" className=\"white\">\n                                login\n              </NavLink>\n              .\n            </p>\n                    </div>\n                    <div className=\"form-side\">\n                        <NavLink to=\"/\" className=\"white\">\n                            <span className=\"logo-single\" />\n                        </NavLink>\n                        <CardTitle className=\"mb-5\">\n                            <span>Register</span>\n                           \n                        </CardTitle>\n                        <Formik initialValues={initialValues} onSubmit={onUserRegister}>\n                            {({ errors, touched, handleChange, values, isSubmitting }) => (\n                                <Form className=\"av-tooltip tooltip-label-bottom\">\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                        <span>Username</span>\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"name\" name=\"username\" value={values.username} validate={username} />\n                                        {errors.username && touched.username && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.username}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n\n\n\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                        <span>Email</span>\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"email\" name=\"email\" value={values.email} validate={validateEmail} />\n                                        {errors.email && touched.email && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.email}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                        <span>Password</span>\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"password\" name=\"password\" value={values.password} autoComplete=\"on\" validate={validatePassword} />\n                                        {errors.password && touched.password && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.password}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n                                    <FormGroup className=\"form-group has-float-label\">\n                                        <Label>\n                                        <span>Confirm Password</span>\n                                        </Label>\n                                        <Field className=\"form-control\" type=\"password\" name=\"confirm_password\" value={values.confirm_password} autoComplete=\"on\" validate={validateConfirmPassword} />\n                                        {errors.password && touched.password && (\n                                            <div className=\"invalid-feedback d-block\">\n                                                {errors.password}\n                                            </div>\n                                        )}\n                                    </FormGroup>\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <NavLink to=\"/login\">\n                                            <span>Already have an Account? Login</span>\n                                        </NavLink>\n                                    </div>\n                                    <div className=\"d-flex justify-content-end align-items-center\">\n\n                                        <Button\n                                            color=\"primary\"\n                                            className=\"btn-shadow\"\n                                            size=\"lg\"\n                                            type=\"submit\"\n                                        >\n                                            {isSubmitting ? \"loading\" : \"Register\"}\n                                        </Button>\n                                    </div>\n                                </Form>\n                            )}\n                        </Formik>\n                    </div>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nconst mapStateToProps = ({ authUser }) => { \n  const { loading, error,currentUser } = authUser;\n  /* console.log(\"current user\", currentUser) */\n  \n  return { loading, error };\n};\n\nexport default (connect(mapStateToProps, {\n  registerUserAction: registerUser,\n}))(Register);\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\"\n\n\n\nconst Homepage = () => {\n    const background = {\n        backgroundImage: `url(${\"https://res.cloudinary.com/uploadfiles/image/upload/v1616946288/oranges-in-a-box_xp0fjs.jpg\"})`,\n        backgroundSize: 'cover',\n\n        height: \"100vh\"\n\n    };\n    return (\n        <>\n            <div style={{ ...background }}>\n                <h4 className=\"text-center display-4 pt-5\" style={{ fontWeight: \"500\", color: \"#fff\" }}>Scaffoldzoid</h4>\n                <div className=\"d-flex justify-content-center align-items-center h-75\">\n\n                    <NavLink className=\"btn btn-outline-light btn-lg mr-2\" to=\"/register/seller\">Wanna Sell Oranges?</NavLink>\n                    <NavLink  className=\"btn btn-outline-light btn-lg ml-2\" to=\"/register/buyer\">Wanna Buy Oranges?</NavLink>\n\n                </div>\n\n            </div>\n        </>\n    )\n\n}\n\nexport default Homepage;","import React, {useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button, Col } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form, Field } from 'formik';\nimport { loginUser } from '../../redux/actions';\n\n\n\nconst validatePassword = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your password';\n  } else if (value.length < 4) {\n    error = 'Value must be longer than 3 characters';\n  }\n  return error;\n};\n\nconst validateEmail = (value) => {\n  let error;\n  if (!value) {\n    error = 'Please enter your email address';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n};\n\nconst Login = ({ history, loading, error, loginUserAction }) => {\n\n\n  useEffect(() => {\n\n  });\n\n  const onUserLogin = (values) => {\n    if (!loading) {\n      if (values.email !== '' && values.password !== '') {\n        loginUserAction(values, history);\n      }\n    }\n  };\n\n  const initialValues = { email: \"\", password: \"\" };\n\n  return (\n    <Row className=\"h-50\" style={{marginTop:\"100px\"}}>\n      <Col xxs=\"12\" md=\"6\" className=\"mx-auto\">\n        <Card className=\"auth-card\">\n          <div className=\"position-relative image-side\">\n            <p className=\"text-white h2\">Scaffoldzoid</p>\n            <p className=\"white mb-0\">\n              Please use your credentials to login.\n              <br />\n              If you are not a member, you can register as seller or buyer{' '}\n              <NavLink to=\"/\" className=\"white\">\n                Homepage\n              </NavLink>\n              .\n            </p>\n          </div>\n          <div className=\"form-side\">\n            <NavLink to=\"/\" className=\"white\">\n              <span className=\"logo-single\" />\n            </NavLink>\n            <CardTitle className=\"mb-4\">\n              <span>Login</span>\n\n            </CardTitle>\n\n            <Formik initialValues={initialValues} onSubmit={onUserLogin}>\n              {({ errors, touched }) => (\n                <Form className=\"av-tooltip tooltip-label-bottom\">\n                  <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n\n                      <span>Email</span>\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"email\"\n                      validate={validateEmail}\n                    />\n                    {errors.email && touched.email && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.email}\n                      </div>\n                    )}\n                  </FormGroup>\n                  <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n                      <span>Password</span>\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      validate={validatePassword}\n                      autoComplete=\"on\"\n                    />\n                    {errors.password && touched.password && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.password}\n                      </div>\n                    )}\n                  </FormGroup>\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    {/* <NavLink to=\"/user/forgot-password\">\n                      <IntlMessages id=\"user.forgot-password-question\" />\n                    </NavLink> */}\n                    <Button type=\"submit\"\n                      color=\"primary\"\n                      className={`btn-shadow btn-multiple-state ${loading ? 'show-spinner' : ''\n                        }`}\n                      size=\"lg\"\n                    >\n                      <span className=\"spinner d-inline-block\">\n                        <span className=\"bounce1\" />\n                        <span className=\"bounce2\" />\n                        <span className=\"bounce3\" />\n                      </span>\n                      <span className=\"label\">\n                        <span>Login</span>\n                      </span>\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\nconst mapStateToProps = ({ authUser }) => {\n  const { loading } = authUser;\n\n  return {\n    loading\n  };\n\n};\n\nexport default connect(mapStateToProps, {\n  loginUserAction: loginUser,\n})(Login);\n","import React from \"react\";\nimport { BrowserRouter as Router,/*  HashRouter as Router */ Switch } from \"react-router-dom\"\nimport PublicRoute from \"./routes/public\";\nimport PrivateRoute from \"./routes/private\"\nimport { NotificationContainer } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\n\n\n//authenticated related pages\nimport Buyer from \"./pages/buyer/buyer\"\nimport Seller from \"./pages/seller/seller\"\nimport Profile from \"./pages/seller/profile\"\nimport SellerNavbar from \"./pages/seller/sellerNav\"\nimport Product from \"./pages/seller/products\"\nimport ProductAdd from \"./pages/seller/productsAdd\"\nimport productsUpdate from \"./pages/seller/productsUpdate\";\nimport SellerChart from \"./pages/buyer/sellerChart\"\n\n\n\n//public pages\nimport Register from \"./pages/authentication/register\"\nimport Homepage from \"./pages/homepage/homepage\"\nimport Login from \"./pages/authentication/login\"\n\n\n\n\nconst App = () => {\n  \n\n  return (\n    <>\n\n      <NotificationContainer />\n      <Router>\n\n        <Switch>\n          <PublicRoute restricted={false} component={Homepage} path=\"/\" exact />\n          <PublicRoute restricted={true} component={Register} path=\"/register/:role\" exact />\n          <PublicRoute restricted={true} component={Login} path=\"/login\" exact />\n\n         \n           \n              <PrivateRoute component={Buyer} path=\"/buyer\" exact />\n              <PrivateRoute component={SellerChart} path=\"/buyer/seller-profile/:user_id\" exact />\n           \n           \n\n         \n            <SellerNavbar>\n              <PrivateRoute component={Seller} path=\"/seller\" exact />\n              <PrivateRoute component={Profile} path=\"/seller/profile\" exact />\n              <PrivateRoute component={Product} path=\"/seller/product\" exact />\n              <PrivateRoute component={ProductAdd} path=\"/seller/product/add\" exact />\n              <PrivateRoute component={productsUpdate} path=\"/seller/product/edit/:id\" exact />\n            </SellerNavbar>\n            \n\n        </Switch>\n      </Router>\n\n    </>\n  )\n\n\n}\n\nexport default App;\n","import {\n  LOGIN_USER,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  LOGOUT_USER,\n\n} from '../actions';\n\n\n\nconst INIT_STATE = {\n  currentUser: null,\n  loading: false,\n  error: '',\n};\n\n\nexport default (state = INIT_STATE, action) => {\n  /* console.log(' state error', state.error) */\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, loading: true, error: '' };\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        currentUser: action.payload,\n        \n      };\n    case LOGIN_USER_ERROR:\n      return {\n        ...state,\n        loading: false,\n        currentUser: null,\n        error: action.payload.message,\n      };\n    case REGISTER_USER:\n      return { ...state, /* currentUser: action.payload */ loading: false, error: '' };\n    case REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        /* currentUser: action.payload, */\n        \n      };\n    case REGISTER_USER_ERROR:\n      return {\n        ...state,\n        loading: false,\n        currentUser: null,\n        error: action.payload.message,\n\n      };\n\n    case LOGOUT_USER:\n      return { ...state, currentUser: null, error: '' };\n    default:\n      return { ...state };\n  }\n};\n","import {\n    PRODUCT_ADD,\n    PRODUCT_ADD_SUCCESS,\n    PRODUCT_ADD_ERROR,\n    ALL_PRODUCT,\n    ALL_PRODUCT_SUCCESS,\n    ALL_PRODUCT_ERROR,\n    SELECTED_PRODUCT,\n    SELECTED_PRODUCT_SUCCESS,\n    SELECTED_PRODUCT_ERROR,\n    PRODUCT_UPDATE,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_ERROR,\n    PROFILE,\n    PROFILE_SUCCESS,\n    PROFILE_ERROR,\n    GET_PROFILE,\n    GET_PROFILE_SUCCESS,\n    GET_PROFILE_ERROR,\n    ALL_SELLERS,\n    ALL_SELLERS_SUCCESS,\n    ALL_SELLERS_ERROR\n}\n    from \"../actions\"\n\n\nconst INIT_STATE = {\n\n    products: [],\n    loading: false,\n    error: '',\n    allProduct: [],\n    selectedProduct: [],\n    addedProfile: [],\n    allSellerData:[]\n};\n/* console.log(\"payloaddd\",INIT_STATE.userProfile)\n */\nconst sellerProduct = (state = INIT_STATE, action) => {\n\n\n    switch (action.type) {\n        case PRODUCT_ADD:\n            return { ...state, loading: true, error: '' };\n        case PRODUCT_ADD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n\n            };\n        case PRODUCT_ADD_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        case ALL_PRODUCT:\n            return { ...state, loading: true, error: '' };\n        case ALL_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                allProduct: action.payload\n\n            };\n        case ALL_PRODUCT_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        case SELECTED_PRODUCT:\n            return { ...state, loading: true, error: '' };\n        case SELECTED_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                selectedProduct: action.payload\n\n            };\n        case SELECTED_PRODUCT_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        case PRODUCT_UPDATE:\n            return { ...state, loading: true, error: '' };\n        case PRODUCT_UPDATE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n\n\n            };\n        case PRODUCT_UPDATE_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        case PROFILE:\n            return { ...state, loading: true, error: '' };\n        case PROFILE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        case GET_PROFILE:\n            return { ...state, loading: true, error: '' };\n        case GET_PROFILE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                addedProfile: action.payload\n\n            };\n        case GET_PROFILE_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        case ALL_SELLERS:\n            return { ...state, loading: true, error: '' };\n        case ALL_SELLERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                allSellerData: action.payload\n\n            };\n        case ALL_SELLERS_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        default:\n            return { ...state };\n    }\n};\nexport default sellerProduct;","import { combineReducers } from 'redux';\nimport authUser from './auth/reducer';\nimport sellerProduct from \"./product/reducers\"\n\n\nconst reducers = combineReducers({\n  \n  authUser,\n  sellerProduct\n \n});\n\nexport default reducers;\n","export const API_URL = \"https://api.scaffoldzoid.arkpass.com\"","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from \"axios\"\nimport { NotificationManager } from 'react-notifications';\n\n\nimport {\n  LOGIN_USER,\n  REGISTER_USER,\n  LOGOUT_USER,\n\n} from '../actions';\n\nimport {\n  loginUserSuccess,\n  loginUserError,\n  registerUserSuccess,\n  registerUserError,\n\n} from './actions';\nimport { setCurrentUser } from '../../helpers/Utils';\nimport { API_URL } from \"../../apiUrl.js\"\n\n\nexport function* watchLoginUser() {\n  yield takeEvery(LOGIN_USER, loginWithEmailPassword);\n}\n\nconst loginWithEmailPasswordAsync = async (email, password, history) =>\n\n  await axios.post(`${API_URL}/user/login`, { email, password })\n    .then((user) => {\n      /* console.log(\"user\", user) */\n      if (user.status === 200) {\n        setCurrentUser(user.data.data);\n        put(loginUserSuccess(user.data.data));\n\n        NotificationManager.success(user.data.message);\n        if (user.data.data.role === \"seller\") {\n          history.push(\"/seller\")\n        } else if (user.data.data.role === \"buyer\") {\n          history.push(\"/buyer\")\n        }\n\n      } else if (user.status === 206) {\n        put(loginUserError(user.data.message))\n        NotificationManager.warning(user.data.message);\n      }\n    })\n    .catch((error) => NotificationManager.warning(error));\n\nfunction* loginWithEmailPassword({ payload }) {\n  const { email, password } = payload.user;\n  const { history } = payload;\n  \n   yield call(loginWithEmailPasswordAsync, email, password, history);\n}\n\nexport function* watchRegisterUser() {\n  \n  yield takeEvery(REGISTER_USER, registerWithEmailPassword);\n}\n\nconst registerWithEmailPasswordAsync = async (username, email, password, role, history) =>\n\nawait axios.post(`${API_URL}/user/register`, { username, email, password, role })\n    \n    .then((user) => {\n    \n      if (user.status === 200) {\n        put(registerUserSuccess(user.data.data))\n        NotificationManager.success(user.data.message);\n        history.push('/login')\n      } else if (user.status === 206) {\n        put(registerUserError(user.data.message))\n        NotificationManager.warning(user.data.message);\n      }\n\n    })\n    .catch((error) => {\n     \n      NotificationManager.warning(error, 'Registeration Error', 3000, null, null, '')\n    });\n\nfunction* registerWithEmailPassword({ payload }) {\n  console.log(\"value register\", payload)\n  const { username, email, password, role } = payload.user;\n  const { history } = payload;\n  try {\n    yield call(\n      registerWithEmailPasswordAsync,\n      username, email, password, role, history\n\n    );\n    /* console.log(\"register user data\", registerUser) */\n\n  } catch (error) {\n    yield put(registerUserError(error));\n  }\n}\n\nexport function* watchLogoutUser() {\n\n  yield takeEvery(LOGOUT_USER, logout);\n}\n\n\n\nfunction* logout({ payload }) {\n  const { history } = payload;\n  setCurrentUser();\n  history.push(\"/\");\n\n}\n\n\n\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchLoginUser),\n    fork(watchLogoutUser),\n    fork(watchRegisterUser),\n\n  ]);\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport { NotificationManager } from 'react-notifications';\n\nimport {\n    PRODUCT_ADD,\n    ALL_PRODUCT,\n    SELECTED_PRODUCT,\n    PRODUCT_UPDATE,\n    PROFILE,\n    GET_PROFILE,\n    ALL_SELLERS,\n    \n\n}\nfrom \"../actions\"\n\nimport {\n    productAddSuccess,\n    productAddError,\n    allProductsSuccess,\n    allProductsError,\n    getSelectedProductSuccess,\n    getSelectedProductError,\n    productUpdateSuccess,\n    productUpdateError,\n    profileAddedSuccess,\n    profileAddedError,\n    getProfileSuccess,\n    getProfileError,\n    allSellerSuccess,\n    allSellerError\n}\n    from \"./actions\"\n\nimport { getCurrentUser } from '../../helpers/Utils';\nimport { API_URL } from \"../../apiUrl\"\n\n\nexport function* watchAddedProduct() {\n    yield takeEvery(PRODUCT_ADD, AddedProductDetails);\n}\n\nconst AddedProductDetailsAsync = async (data) => {\n\n    await axios.post(`${API_URL}/seller/product-add`, data)\n\n        .then((product) => {\n            /* console.log(\"added product\", product) */\n            if (product.status === 200) {\n\n                NotificationManager.success(product.data.message);\n\n            } else if (product.status === 206) {\n\n                NotificationManager.warning(product.data.message);\n            }\n        })\n        .catch((error) => NotificationManager.warning(error));\n}\n\n\n\n\n\nfunction* AddedProductDetails({ payload }) {\n    console.log(\"payload\", payload.product)\n    const {\n        name,\n        rate,\n\n    } = payload.product\n\n\n    const user_id = getCurrentUser().id\n\n    try {\n        const data = {\n            user_id, name, rate\n        }\n\n        const addedproducts = yield call(AddedProductDetailsAsync, data);\n\n\n        /* console.log(\"addedproducts\", addedproducts) */\n        yield put(productAddSuccess(addedproducts.data.data));\n    } catch (e) {\n        yield put(productAddError(e))\n        /* console.log(\"e\", e) */\n    }\n\n}\n\nexport function* watchAllProducts() {\n\n    yield takeEvery(ALL_PRODUCT, AllProductsDetails);\n}\n\n\nfunction* AllProductsDetails({ payload }) {\n    try {\n        const url = `${API_URL}/seller/product/all/${payload.user_id}`;\n        const products = yield call(() => axios.get(url))\n\n        /* console.log(products, \"response\"); */\n        if (products.status === 200) {\n\n            yield put(allProductsSuccess(products.data.data))\n\n\n\n        } else if (products.status === 206) {\n            yield put(allProductsError(products.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\n\n\n\n\nexport function* watchSelectedProducts() {\n\n    yield takeEvery(SELECTED_PRODUCT, SelectedProductsDetails);\n}\n\n\nfunction* SelectedProductsDetails({ payload }) {\n\n    try {\n        const url = `${API_URL}/seller/product/${payload.id}`;\n        const product = yield call(() => axios.get(url))\n\n        /* console.log(product, \"selected product\"); */\n        if (product.status === 200) {\n\n            yield put(getSelectedProductSuccess(product.data.data))\n\n\n\n        } else if (product.status === 206) {\n            yield put(getSelectedProductError(product.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\nexport function* watchProductUpdate() {\n    yield takeEvery(PRODUCT_UPDATE, ProductUpdateDetails);\n}\n\nconst ProductUpdateDetailsAsync = async (data) => {\n    console.log(\"data update\", data)\n    await axios.put(`${API_URL}/seller/product-update`, data)\n\n        .then((product) => {\n            /* console.log(\"product updated\", product) */\n            if (product.status === 200) {\n\n                NotificationManager.success(product.data.message);\n\n            } else if (product.status === 206) {\n\n                NotificationManager.warning(product.data.message);\n            }\n        })\n        .catch((error) => NotificationManager.warning(error));\n}\n\n\n\n\n\nfunction* ProductUpdateDetails({ payload }) {\n\n    const {\n        id,\n        user_id,\n        name,\n        rate,\n\n    } = payload.product\n\n    try {\n        const data = {\n            id, user_id, name, rate\n        }\n\n        const updatedProduct = yield call(ProductUpdateDetailsAsync, data);\n\n\n        /* console.log(\"updated data\", updatedProduct) */\n        yield put(productUpdateSuccess(updatedProduct.data.data));\n    } catch (e) {\n        yield put(productUpdateError(e))\n\n    }\n\n}\n\n\nexport function* watchAddedProfile() {\n    yield takeEvery(PROFILE, AddedProfileDetails);\n}\n\nconst AddedProfileDetailsAsync = async (data) => {\n\n    await axios.post(`${API_URL}/seller/profile`, data)\n\n        .then((profile) => {\n           /*  console.log(\"added profile\", profile) */\n            if (profile.status === 200) {\n                put(profileAddedSuccess(profile.data.data));\n                NotificationManager.success(profile.data.message);\n\n            } else if (profile.status === 206) {\n                put(profileAddedError(profile.data.message))\n                NotificationManager.warning(profile.data.message)\n            }\n        })\n        .catch((error) => NotificationManager.warning(error));\n}\n\n\n\n\n\nfunction* AddedProfileDetails({ payload }) {\n/*     console.log(\"payload\", payload.profile) */\n    const {\n        description, picture\n\n    } = payload.profile\n    const user_id = getCurrentUser().id\n    const data = {\n        user_id, description, picture\n    }\n    yield call(AddedProfileDetailsAsync, data);\n\n}\n\n\nexport function* watchSellerProfile() {\n\n    yield takeEvery(GET_PROFILE, SellerProfileDetails);\n}\n\n\nfunction* SellerProfileDetails({ payload }) {\n    try {\n        const url = `${API_URL}/seller/profile/${payload.user_id}`;\n        const profile = yield call(() => axios.get(url))\n\n       /*  console.log(profile, \"response\"); */\n        if (profile.status === 200) {\n\n            yield put(getProfileSuccess(profile.data.data))\n\n\n\n        } else if (profile.status === 206) {\n            yield put(getProfileError(profile.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\n\nexport function* watchAllSellers() {\n\n    yield takeEvery(ALL_SELLERS, AllSellersDetails);\n}\n\n\nfunction* AllSellersDetails({ payload }) {\n    try {\n        const url = `${API_URL}/buyer/all-sellers`;\n        const seller = yield call(() => axios.get(url))\n\n       /*  console.log(seller, \"response\"); */\n        if (seller.status === 200) {\n\n            yield put(allSellerSuccess(seller.data.data))\n\n\n\n        } else if (seller.status === 206) {\n            yield put(allSellerError(seller.data.message))\n\n        }\n\n    }\n    catch (e) {\n        console.log(\"e\", e)\n\n    }\n\n}\n\n\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        fork(watchAddedProduct),\n        fork(watchAllProducts),\n        fork(watchSelectedProducts),\n        fork(watchProductUpdate),\n        fork(watchAddedProfile),\n        fork(watchSellerProfile),\n        fork(watchAllSellers)\n\n    ]);\n}\n","import { all } from 'redux-saga/effects';\nimport authSagas from './auth/saga';\nimport productSagas from \"./product/saga\"\n\nexport default function* rootSaga() {\n  yield all([\n    authSagas(),\n    productSagas()\n   \n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\n\n  const store = createStore(\n    reducers,\n \n    compose(applyMiddleware(...middlewares))\n  );\n\n  sagaMiddleware.run(sagas);\n\n \nexport default store","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback={<div className=\"loading\" />}>\n      <App />\n    </Suspense>\n  </Provider>,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n/* reportWebVitals(); */\n"],"sourceRoot":""}